{"sources": {"/home/wejdene/thesis/NFT-F/contracts/EchidnaMarketIntegrationTest.sol": {"AST": {"absolutePath": "contracts/EchidnaMarketIntegrationTest.sol", "exportedSymbols": {"Context": [1186], "EchidnaMarketIntegrationTest": [358], "IERC20": [1087], "IMarketIntegration": [861], "MarketIntegration": [791], "MockERC20": [188], "Ownable": [1009], "ReentrancyGuard": [1156]}, "id": 359, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "32:24:0"}, {"absolutePath": "contracts/MarketIntegration.sol", "file": "./MarketIntegration.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 359, "sourceUnit": 792, "src": "58:33:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "MockERC20", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 188, "linearizedBaseContracts": [188], "name": "MockERC20", "nameLocation": "102:9:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "70a08231", "id": 6, "mutability": "mutable", "name": "balanceOf", "nameLocation": "153:9:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "118:44:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 5, "keyName": "", "keyNameLocation": "-1:-1:-1", "keyType": {"id": 3, "name": "address", "nodeType": "ElementaryTypeName", "src": "126:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "118:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": {"id": 4, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "137:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "dd62ed3e", "id": 12, "mutability": "mutable", "name": "allowance", "nameLocation": "223:9:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "168:64:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 11, "keyName": "", "keyNameLocation": "-1:-1:-1", "keyType": {"id": 7, "name": "address", "nodeType": "ElementaryTypeName", "src": "176:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "168:47:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": {"id": 10, "keyName": "", "keyNameLocation": "-1:-1:-1", "keyType": {"id": 8, "name": "address", "nodeType": "ElementaryTypeName", "src": "195:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "187:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueName": "", "valueNameLocation": "-1:-1:-1", "valueType": {"id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "206:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "public"}, {"constant": false, "functionSelector": "06fdde03", "id": 15, "mutability": "mutable", "name": "name", "nameLocation": "252:4:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "238:33:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 13, "name": "string", "nodeType": "ElementaryTypeName", "src": "238:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "4d6f636b20546f6b656e", "id": 14, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "259:12:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_eb96b779e2a421c78f42d9b3999c8bc0c7726c66c63accdd9ba94f2ff1357844", "typeString": "literal_string \"Mock Token\""}, "value": "Mock Token"}, "visibility": "public"}, {"constant": false, "functionSelector": "95d89b41", "id": 18, "mutability": "mutable", "name": "symbol", "nameLocation": "291:6:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "277:28:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 16, "name": "string", "nodeType": "ElementaryTypeName", "src": "277:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "4d544b", "id": 17, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "300:5:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e", "typeString": "literal_string \"MTK\""}, "value": "MTK"}, "visibility": "public"}, {"constant": false, "functionSelector": "313ce567", "id": 21, "mutability": "mutable", "name": "decimals", "nameLocation": "324:8:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "311:26:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 19, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "311:5:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "value": {"hexValue": "3138", "id": 20, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "335:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "visibility": "public"}, {"constant": false, "functionSelector": "18160ddd", "id": 28, "mutability": "mutable", "name": "totalSupply", "nameLocation": "358:11:0", "nodeType": "VariableDeclaration", "scope": 188, "src": "343:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "343:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}, "id": 27, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "31303030303030", "id": 23, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "372:7:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1000000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 26, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 24, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "382:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 25, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "386:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "382:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "372:16:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}}, "visibility": "public"}, {"body": {"id": 38, "nodeType": "Block", "src": "409:52:0", "statements": [{"expression": {"id": 36, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 31, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "419:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 34, "indexExpression": {"expression": {"id": 32, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "429:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 33, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "433:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "429:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "419:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 35, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "443:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "419:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 37, "nodeType": "ExpressionStatement", "src": "419:35:0"}]}, "id": 39, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 29, "nodeType": "ParameterList", "parameters": [], "src": "406:2:0"}, "returnParameters": {"id": 30, "nodeType": "ParameterList", "parameters": [], "src": "409:0:0"}, "scope": 188, "src": "395:66:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 80, "nodeType": "Block", "src": "535:245:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 54, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 49, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "553:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 52, "indexExpression": {"expression": {"id": 50, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "563:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 51, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "567:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "563:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "553:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 53, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "578:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "553:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d6f636b45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365", "id": 55, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "586:44:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ef8325e1da6c9f887282839ffd25bffe16a7dfd67e034820d880ee202885007", "typeString": "literal_string \"MockERC20: transfer amount exceeds balance\""}, "value": "MockERC20: transfer amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ef8325e1da6c9f887282839ffd25bffe16a7dfd67e034820d880ee202885007", "typeString": "literal_string \"MockERC20: transfer amount exceeds balance\""}], "id": 48, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "545:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 56, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "545:86:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 57, "nodeType": "ExpressionStatement", "src": "545:86:0"}, {"expression": {"id": 63, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 58, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "641:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 61, "indexExpression": {"expression": {"id": 59, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "651:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 60, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "655:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "651:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "641:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 62, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "666:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "641:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 64, "nodeType": "ExpressionStatement", "src": "641:31:0"}, {"expression": {"id": 69, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 65, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "682:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 67, "indexExpression": {"id": 66, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "692:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "682:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 68, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "699:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "682:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 70, "nodeType": "ExpressionStatement", "src": "682:23:0"}, {"eventCall": {"arguments": [{"expression": {"id": 72, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "729:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 73, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "733:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "729:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 74, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "741:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 75, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "745:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 71, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "720:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "720:32:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 77, "nodeType": "EmitStatement", "src": "715:37:0"}, {"expression": {"hexValue": "74727565", "id": 78, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "769:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 47, "id": 79, "nodeType": "Return", "src": "762:11:0"}]}, "functionSelector": "a9059cbb", "id": 81, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "476:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 44, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 41, "mutability": "mutable", "name": "to", "nameLocation": "493:2:0", "nodeType": "VariableDeclaration", "scope": 81, "src": "485:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 40, "name": "address", "nodeType": "ElementaryTypeName", "src": "485:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 43, "mutability": "mutable", "name": "amount", "nameLocation": "505:6:0", "nodeType": "VariableDeclaration", "scope": 81, "src": "497:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 42, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "497:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "484:28:0"}, "returnParameters": {"id": 47, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 46, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 81, "src": "529:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 45, "name": "bool", "nodeType": "ElementaryTypeName", "src": "529:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "528:6:0"}, "scope": 188, "src": "467:313:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 108, "nodeType": "Block", "src": "858:129:0", "statements": [{"expression": {"id": 97, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 90, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12, "src": "868:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 94, "indexExpression": {"expression": {"id": 91, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "878:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 92, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "882:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "878:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "868:21:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 95, "indexExpression": {"id": 93, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 83, "src": "890:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "868:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 96, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "901:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "868:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 98, "nodeType": "ExpressionStatement", "src": "868:39:0"}, {"eventCall": {"arguments": [{"expression": {"id": 100, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "931:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "935:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "931:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 102, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 83, "src": "943:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 103, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "952:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 99, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 187, "src": "922:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "922:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 105, "nodeType": "EmitStatement", "src": "917:42:0"}, {"expression": {"hexValue": "74727565", "id": 106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "976:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 89, "id": 107, "nodeType": "Return", "src": "969:11:0"}]}, "functionSelector": "095ea7b3", "id": 109, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "795:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 86, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 83, "mutability": "mutable", "name": "spender", "nameLocation": "811:7:0", "nodeType": "VariableDeclaration", "scope": 109, "src": "803:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 82, "name": "address", "nodeType": "ElementaryTypeName", "src": "803:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 85, "mutability": "mutable", "name": "amount", "nameLocation": "828:6:0", "nodeType": "VariableDeclaration", "scope": 109, "src": "820:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 84, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "820:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "802:33:0"}, "returnParameters": {"id": 89, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 88, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 109, "src": "852:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 87, "name": "bool", "nodeType": "ElementaryTypeName", "src": "852:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "851:6:0"}, "scope": 188, "src": "786:201:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 170, "nodeType": "Block", "src": "1079:378:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 121, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12, "src": "1097:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 123, "indexExpression": {"id": 122, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "1107:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1097:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 126, "indexExpression": {"expression": {"id": 124, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1113:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1117:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "1113:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1097:27:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 127, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1128:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1097:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d6f636b45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365", "id": 129, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1136:46:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c19c4b120fa2a1ec34a6345b7d8b98aafdd07a934d7a07cea2a5389751b7df1c", "typeString": "literal_string \"MockERC20: transfer amount exceeds allowance\""}, "value": "MockERC20: transfer amount exceeds allowance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c19c4b120fa2a1ec34a6345b7d8b98aafdd07a934d7a07cea2a5389751b7df1c", "typeString": "literal_string \"MockERC20: transfer amount exceeds allowance\""}], "id": 120, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1089:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1089:94:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 131, "nodeType": "ExpressionStatement", "src": "1089:94:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 133, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1201:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 135, "indexExpression": {"id": 134, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "1211:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1201:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 136, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1220:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1201:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d6f636b45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365", "id": 138, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1228:44:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ef8325e1da6c9f887282839ffd25bffe16a7dfd67e034820d880ee202885007", "typeString": "literal_string \"MockERC20: transfer amount exceeds balance\""}, "value": "MockERC20: transfer amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ef8325e1da6c9f887282839ffd25bffe16a7dfd67e034820d880ee202885007", "typeString": "literal_string \"MockERC20: transfer amount exceeds balance\""}], "id": 132, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1193:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1193:80:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 140, "nodeType": "ExpressionStatement", "src": "1193:80:0"}, {"expression": {"id": 145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 141, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1283:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 143, "indexExpression": {"id": 142, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "1293:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1283:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 144, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1302:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1283:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 146, "nodeType": "ExpressionStatement", "src": "1283:25:0"}, {"expression": {"id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 147, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1318:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 149, "indexExpression": {"id": 148, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 113, "src": "1328:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1318:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 150, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1335:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1318:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 152, "nodeType": "ExpressionStatement", "src": "1318:23:0"}, {"expression": {"id": 160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 153, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12, "src": "1351:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 157, "indexExpression": {"id": 154, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "1361:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1351:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 158, "indexExpression": {"expression": {"id": 155, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1367:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1371:6:0", "memberName": "sender", "nodeType": "MemberAccess", "src": "1367:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1351:27:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 159, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1382:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1351:37:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 161, "nodeType": "ExpressionStatement", "src": "1351:37:0"}, {"eventCall": {"arguments": [{"id": 163, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "1412:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 164, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 113, "src": "1418:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 165, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "1422:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 162, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "1403:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1403:26:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 167, "nodeType": "EmitStatement", "src": "1398:31:0"}, {"expression": {"hexValue": "74727565", "id": 168, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1446:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 119, "id": 169, "nodeType": "Return", "src": "1439:11:0"}]}, "functionSelector": "23b872dd", "id": 171, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "1002:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 116, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 111, "mutability": "mutable", "name": "from", "nameLocation": "1023:4:0", "nodeType": "VariableDeclaration", "scope": 171, "src": "1015:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 110, "name": "address", "nodeType": "ElementaryTypeName", "src": "1015:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 113, "mutability": "mutable", "name": "to", "nameLocation": "1037:2:0", "nodeType": "VariableDeclaration", "scope": 171, "src": "1029:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 112, "name": "address", "nodeType": "ElementaryTypeName", "src": "1029:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 115, "mutability": "mutable", "name": "amount", "nameLocation": "1049:6:0", "nodeType": "VariableDeclaration", "scope": 171, "src": "1041:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 114, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1041:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1014:42:0"}, "returnParameters": {"id": 119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 118, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 171, "src": "1073:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 117, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1073:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1072:6:0"}, "scope": 188, "src": "993:464:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"anonymous": false, "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "id": 179, "name": "Transfer", "nameLocation": "1469:8:0", "nodeType": "EventDefinition", "parameters": {"id": 178, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 173, "indexed": true, "mutability": "mutable", "name": "from", "nameLocation": "1494:4:0", "nodeType": "VariableDeclaration", "scope": 179, "src": "1478:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 172, "name": "address", "nodeType": "ElementaryTypeName", "src": "1478:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 175, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "1516:2:0", "nodeType": "VariableDeclaration", "scope": 179, "src": "1500:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 174, "name": "address", "nodeType": "ElementaryTypeName", "src": "1500:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 177, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "1528:5:0", "nodeType": "VariableDeclaration", "scope": 179, "src": "1520:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1520:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1477:57:0"}, "src": "1463:72:0"}, {"anonymous": false, "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "id": 187, "name": "Approval", "nameLocation": "1546:8:0", "nodeType": "EventDefinition", "parameters": {"id": 186, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 181, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "1571:5:0", "nodeType": "VariableDeclaration", "scope": 187, "src": "1555:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 180, "name": "address", "nodeType": "ElementaryTypeName", "src": "1555:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 183, "indexed": true, "mutability": "mutable", "name": "spender", "nameLocation": "1594:7:0", "nodeType": "VariableDeclaration", "scope": 187, "src": "1578:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 182, "name": "address", "nodeType": "ElementaryTypeName", "src": "1578:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 185, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "1611:5:0", "nodeType": "VariableDeclaration", "scope": 187, "src": "1603:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 184, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1603:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1554:63:0"}, "src": "1540:78:0"}], "scope": 359, "src": "93:1527:0", "usedErrors": [], "usedEvents": [179, 187]}, {"abstract": false, "baseContracts": [], "canonicalName": "EchidnaMarketIntegrationTest", "contractDependencies": [188, 791], "contractKind": "contract", "fullyImplemented": true, "id": 358, "linearizedBaseContracts": [358], "name": "EchidnaMarketIntegrationTest", "nameLocation": "1632:28:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "80f55605", "id": 191, "mutability": "mutable", "name": "market", "nameLocation": "1692:6:0", "nodeType": "VariableDeclaration", "scope": 358, "src": "1667:31:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}, "typeName": {"id": 190, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 189, "name": "MarketIntegration", "nameLocations": ["1667:17:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 791, "src": "1667:17:0"}, "referencedDeclaration": 791, "src": "1667:17:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "visibility": "public"}, {"constant": false, "functionSelector": "0fc63d10", "id": 194, "mutability": "mutable", "name": "tokenA", "nameLocation": "1721:6:0", "nodeType": "VariableDeclaration", "scope": 358, "src": "1704:23:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}, "typeName": {"id": 193, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 192, "name": "MockERC20", "nameLocations": ["1704:9:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 188, "src": "1704:9:0"}, "referencedDeclaration": 188, "src": "1704:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "5f64b55b", "id": 197, "mutability": "mutable", "name": "tokenB", "nameLocation": "1750:6:0", "nodeType": "VariableDeclaration", "scope": 358, "src": "1733:23:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}, "typeName": {"id": 196, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 195, "name": "MockERC20", "nameLocations": ["1733:9:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 188, "src": "1733:9:0"}, "referencedDeclaration": 188, "src": "1733:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "visibility": "public"}, {"body": {"id": 272, "nodeType": "Block", "src": "1777:324:0", "statements": [{"expression": {"id": 205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 200, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "1787:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "1796:13:0", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$188_$", "typeString": "function () returns (contract MockERC20)"}, "typeName": {"id": 202, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 201, "name": "MockERC20", "nameLocations": ["1800:9:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 188, "src": "1800:9:0"}, "referencedDeclaration": 188, "src": "1800:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}}, "id": 204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1796:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "src": "1787:24:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 206, "nodeType": "ExpressionStatement", "src": "1787:24:0"}, {"expression": {"id": 212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 207, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "1821:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "1830:13:0", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$188_$", "typeString": "function () returns (contract MockERC20)"}, "typeName": {"id": 209, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 208, "name": "MockERC20", "nameLocations": ["1834:9:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 188, "src": "1834:9:0"}, "referencedDeclaration": 188, "src": "1834:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}}, "id": 211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1830:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "src": "1821:24:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 213, "nodeType": "ExpressionStatement", "src": "1821:24:0"}, {"expression": {"id": 227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 214, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "1855:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 220, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "1894:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}], "id": 219, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1886:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 218, "name": "address", "nodeType": "ElementaryTypeName", "src": "1886:7:0", "typeDescriptions": {}}}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1886:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 224, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "1911:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}], "id": 223, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1903:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 222, "name": "address", "nodeType": "ElementaryTypeName", "src": "1903:7:0", "typeDescriptions": {}}}, "id": 225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1903:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "1864:21:0", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MarketIntegration_$791_$", "typeString": "function (address,address) returns (contract MarketIntegration)"}, "typeName": {"id": 216, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 215, "name": "MarketIntegration", "nameLocations": ["1868:17:0"], "nodeType": "IdentifierPath", "referencedDeclaration": 791, "src": "1868:17:0"}, "referencedDeclaration": 791, "src": "1868:17:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1864:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "src": "1855:64:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "id": 228, "nodeType": "ExpressionStatement", "src": "1855:64:0"}, {"expression": {"arguments": [{"arguments": [{"id": 234, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "1952:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}], "id": 233, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1944:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 232, "name": "address", "nodeType": "ElementaryTypeName", "src": "1944:7:0", "typeDescriptions": {}}}, "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1944:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}, "id": 240, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3530303030", "id": 236, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1961:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_50000_by_1", "typeString": "int_const 50000"}, "value": "50000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 239, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 237, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1969:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 238, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1973:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "1969:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "1961:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}], "expression": {"id": 229, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "1929:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1936:7:0", "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "1929:14:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1929:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 242, "nodeType": "ExpressionStatement", "src": "1929:47:0"}, {"expression": {"arguments": [{"arguments": [{"id": 248, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "2009:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}], "id": 247, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2001:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 246, "name": "address", "nodeType": "ElementaryTypeName", "src": "2001:7:0", "typeDescriptions": {}}}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2001:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}, "id": 254, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3530303030", "id": 250, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2018:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_50000_by_1", "typeString": "int_const 50000"}, "value": "50000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 253, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 251, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2026:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2030:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2026:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2018:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_50000000000000000000000_by_1", "typeString": "int_const 50000000000000000000000"}], "expression": {"id": 243, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "1986:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1993:7:0", "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 109, "src": "1986:14:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 255, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1986:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 256, "nodeType": "ExpressionStatement", "src": "1986:47:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, "id": 264, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130303030", "id": 260, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2063:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 263, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 261, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2071:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 262, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2075:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2071:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2063:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}}, {"commonType": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, "id": 269, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130303030", "id": 265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2079:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 268, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 266, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2087:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 267, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2091:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2087:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2079:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}], "expression": {"id": 257, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "2043:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "id": 259, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2050:12:0", "memberName": "addLiquidity", "nodeType": "MemberAccess", "referencedDeclaration": 477, "src": "2043:19:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) external"}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2043:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 271, "nodeType": "ExpressionStatement", "src": "2043:51:0"}]}, "id": 273, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 198, "nodeType": "ParameterList", "parameters": [], "src": "1774:2:0"}, "returnParameters": {"id": 199, "nodeType": "ParameterList", "parameters": [], "src": "1777:0:0"}, "scope": 358, "src": "1763:338:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 298, "nodeType": "Block", "src": "2228:104:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 278, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "2245:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2252:11:0", "memberName": "getReserveA", "nodeType": "MemberAccess", "referencedDeclaration": 781, "src": "2245:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 280, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2245:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, "id": 285, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130303030", "id": 281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2269:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 284, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2277:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2281:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2277:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2269:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}}, "src": "2245:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 287, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "2287:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2294:11:0", "memberName": "getReserveB", "nodeType": "MemberAccess", "referencedDeclaration": 790, "src": "2287:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2287:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, "id": 294, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130303030", "id": 290, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2311:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 293, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 291, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2319:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 292, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2323:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2319:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2311:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}}, "src": "2287:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2245:80:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 277, "id": 297, "nodeType": "Return", "src": "2238:87:0"}]}, "functionSelector": "d2fa1822", "id": 299, "implemented": true, "kind": "function", "modifiers": [], "name": "echidna_test_liquidity_cannot_decrease", "nameLocation": "2160:38:0", "nodeType": "FunctionDefinition", "parameters": {"id": 274, "nodeType": "ParameterList", "parameters": [], "src": "2198:2:0"}, "returnParameters": {"id": 277, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 276, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 299, "src": "2222:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 275, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2222:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2221:6:0"}, "scope": 358, "src": "2151:181:0", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 330, "nodeType": "Block", "src": "2443:371:0", "statements": [{"clauses": [{"block": {"id": 323, "nodeType": "Block", "src": "2661:76:0", "statements": [{"expression": {"hexValue": "66616c7365", "id": 321, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2682:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 303, "id": 322, "nodeType": "Return", "src": "2675:12:0"}]}, "errorName": "", "id": 324, "nodeType": "TryCatchClause", "src": "2661:76:0"}, {"block": {"id": 327, "nodeType": "Block", "src": "2744:64:0", "statements": [{"expression": {"hexValue": "74727565", "id": 325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2765:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 303, "id": 326, "nodeType": "Return", "src": "2758:11:0"}]}, "errorName": "", "id": 328, "nodeType": "TryCatchClause", "src": "2738:70:0"}], "externalCall": {"arguments": [{"arguments": [{"id": 308, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "2622:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}], "id": 307, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2614:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 306, "name": "address", "nodeType": "ElementaryTypeName", "src": "2614:7:0", "typeDescriptions": {}}}, "id": 309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2614:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_rational_100000000000000000000_by_1", "typeString": "int_const 100000000000000000000"}, "id": 314, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "313030", "id": 310, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2631:3:0", "typeDescriptions": {"typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100"}, "value": "100"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 313, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 311, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2637:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 312, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2641:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2637:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2631:12:0", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000_by_1", "typeString": "int_const 100000000000000000000"}}, {"commonType": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}, "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130303030", "id": 315, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2645:5:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 318, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 316, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2653:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 317, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2657:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2653:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2645:14:0", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_100000000000000000000_by_1", "typeString": "int_const 100000000000000000000"}, {"typeIdentifier": "t_rational_10000000000000000000000_by_1", "typeString": "int_const 10000000000000000000000"}], "expression": {"id": 304, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "2601:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}, "id": 305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2608:5:0", "memberName": "trade", "nodeType": "MemberAccess", "referencedDeclaration": 648, "src": "2601:12:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256) external"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2601:59:0", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 329, "nodeType": "TryStatement", "src": "2597:211:0"}]}, "functionSelector": "bd4d35ff", "id": 331, "implemented": true, "kind": "function", "modifiers": [], "name": "echidna_test_bad_trade", "nameLocation": "2396:22:0", "nodeType": "FunctionDefinition", "parameters": {"id": 300, "nodeType": "ParameterList", "parameters": [], "src": "2418:2:0"}, "returnParameters": {"id": 303, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 302, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 331, "src": "2437:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 301, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2437:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2436:6:0"}, "scope": 358, "src": "2387:427:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 356, "nodeType": "Block", "src": "2947:108:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 344, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 336, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 194, "src": "2964:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2971:11:0", "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 28, "src": "2964:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2964:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}, "id": 343, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "31303030303030", "id": 339, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2988:7:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1000000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 342, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2998:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3002:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "2998:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "2988:16:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}}, "src": "2964:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 345, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "3008:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_MockERC20_$188", "typeString": "contract MockERC20"}}, "id": 346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3015:11:0", "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 28, "src": "3008:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3008:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}, "id": 352, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "31303030303030", "id": 348, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3032:7:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1000000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 351, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 349, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3042:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3046:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "3042:6:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "3032:16:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}}, "src": "3008:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2964:84:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 335, "id": 355, "nodeType": "Return", "src": "2957:91:0"}]}, "functionSelector": "2701f349", "id": 357, "implemented": true, "kind": "function", "modifiers": [], "name": "echidna_test_total_supply_constant", "nameLocation": "2883:34:0", "nodeType": "FunctionDefinition", "parameters": {"id": 332, "nodeType": "ParameterList", "parameters": [], "src": "2917:2:0"}, "returnParameters": {"id": 335, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 334, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 357, "src": "2941:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 333, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2941:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2940:6:0"}, "scope": 358, "src": "2874:181:0", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 359, "src": "1623:1435:0", "usedErrors": [], "usedEvents": []}], "src": "32:3027:0"}}, "/home/wejdene/thesis/NFT-F/contracts/MarketIntegration.sol": {"AST": {"absolutePath": "contracts/MarketIntegration.sol", "exportedSymbols": {"Context": [1186], "IERC20": [1087], "IMarketIntegration": [861], "MarketIntegration": [791], "Ownable": [1009], "ReentrancyGuard": [1156]}, "id": 792, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 360, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "32:24:1"}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 361, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 792, "sourceUnit": 1088, "src": "58:72:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol", "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol", "id": 362, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 792, "sourceUnit": 1010, "src": "131:68:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol", "file": "../node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol", "id": 363, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 792, "sourceUnit": 1157, "src": "200:75:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IMarketIntegration.sol", "file": "../interfaces/IMarketIntegration.sol", "id": 364, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 792, "sourceUnit": 862, "src": "276:46:1", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 366, "name": "IMarketIntegration", "nameLocations": ["583:18:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 861, "src": "583:18:1"}, "id": 367, "nodeType": "InheritanceSpecifier", "src": "583:18:1"}, {"baseName": {"id": 368, "name": "Ownable", "nameLocations": ["603:7:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1009, "src": "603:7:1"}, "id": 369, "nodeType": "InheritanceSpecifier", "src": "603:7:1"}, {"baseName": {"id": 370, "name": "ReentrancyGuard", "nameLocations": ["612:15:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1156, "src": "612:15:1"}, "id": 371, "nodeType": "InheritanceSpecifier", "src": "612:15:1"}], "canonicalName": "MarketIntegration", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 365, "nodeType": "StructuredDocumentation", "src": "324:228:1", "text": " @title MarketIntegration\n @dev Contract for managing liquidity and enabling trades between two ERC20 tokens.\n It provides functions to add/remove liquidity to a token pair pool and to trade between the two tokens."}, "fullyImplemented": true, "id": 791, "linearizedBaseContracts": [791, 1156, 1009, 1186, 861], "name": "MarketIntegration", "nameLocation": "562:17:1", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "0fc63d10", "id": 374, "mutability": "mutable", "name": "tokenA", "nameLocation": "680:6:1", "nodeType": "VariableDeclaration", "scope": 791, "src": "666:20:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}, "typeName": {"id": 373, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 372, "name": "IERC20", "nameLocations": ["666:6:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1087, "src": "666:6:1"}, "referencedDeclaration": 1087, "src": "666:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "5f64b55b", "id": 377, "mutability": "mutable", "name": "tokenB", "nameLocation": "706:6:1", "nodeType": "VariableDeclaration", "scope": 791, "src": "692:20:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}, "typeName": {"id": 376, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 375, "name": "IERC20", "nameLocations": ["692:6:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1087, "src": "692:6:1"}, "referencedDeclaration": 1087, "src": "692:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "id": 379, "mutability": "mutable", "name": "reserveA", "nameLocation": "780:8:1", "nodeType": "VariableDeclaration", "scope": 791, "src": "764:24:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 378, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "764:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 381, "mutability": "mutable", "name": "reserveB", "nameLocation": "810:8:1", "nodeType": "VariableDeclaration", "scope": 791, "src": "794:24:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 380, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "794:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"body": {"id": 422, "nodeType": "Block", "src": "1080:175:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 394, "name": "_tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "1098:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 397, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1117:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 396, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1109:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 395, "name": "address", "nodeType": "ElementaryTypeName", "src": "1109:7:1", "typeDescriptions": {}}}, "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1109:10:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1098:21:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 400, "name": "_tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "1123:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 403, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1142:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 402, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1134:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 401, "name": "address", "nodeType": "ElementaryTypeName", "src": "1134:7:1", "typeDescriptions": {}}}, "id": 404, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1134:10:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1123:21:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1098:46:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e206164647265737365732063616e6e6f74206265207a65726f2e", "id": 407, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1146:33:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_483a3fa05405161b5e700d64a696b6885e8aea50c984f061c479d480b8b74977", "typeString": "literal_string \"Token addresses cannot be zero.\""}, "value": "Token addresses cannot be zero."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_483a3fa05405161b5e700d64a696b6885e8aea50c984f061c479d480b8b74977", "typeString": "literal_string \"Token addresses cannot be zero.\""}], "id": 393, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1090:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1090:90:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 409, "nodeType": "ExpressionStatement", "src": "1090:90:1"}, {"expression": {"id": 414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 410, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "1190:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 412, "name": "_tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "1206:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 411, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1087, "src": "1199:6:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1087_$", "typeString": "type(contract IERC20)"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1199:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "src": "1190:24:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 415, "nodeType": "ExpressionStatement", "src": "1190:24:1"}, {"expression": {"id": 420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 416, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "1224:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 418, "name": "_tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "1240:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 417, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1087, "src": "1233:6:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1087_$", "typeString": "type(contract IERC20)"}}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1233:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "src": "1224:24:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 421, "nodeType": "ExpressionStatement", "src": "1224:24:1"}]}, "documentation": {"id": 382, "nodeType": "StructuredDocumentation", "src": "826:182:1", "text": " @dev Constructor to set up the market with two tokens.\n @param _tokenA The address of the first token.\n @param _tokenB The address of the second token."}, "id": 423, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"expression": {"id": 389, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1068:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 390, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1072:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "1068:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 391, "kind": "baseConstructorSpecifier", "modifierName": {"id": 388, "name": "Ownable", "nameLocations": ["1060:7:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1009, "src": "1060:7:1"}, "nodeType": "ModifierInvocation", "src": "1060:19:1"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 387, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 384, "mutability": "mutable", "name": "_tokenA", "nameLocation": "1033:7:1", "nodeType": "VariableDeclaration", "scope": 423, "src": "1025:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 383, "name": "address", "nodeType": "ElementaryTypeName", "src": "1025:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 386, "mutability": "mutable", "name": "_tokenB", "nameLocation": "1050:7:1", "nodeType": "VariableDeclaration", "scope": 423, "src": "1042:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 385, "name": "address", "nodeType": "ElementaryTypeName", "src": "1042:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1024:34:1"}, "returnParameters": {"id": 392, "nodeType": "ParameterList", "parameters": [], "src": "1080:0:1"}, "scope": 791, "src": "1013:242:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [803], "body": {"id": 476, "nodeType": "Block", "src": "1549:418:1", "statements": [{"expression": {"id": 435, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 433, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "1559:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 434, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "1571:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1559:24:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 436, "nodeType": "ExpressionStatement", "src": "1559:24:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 440, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1631:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1635:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "1631:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 444, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1651:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}], "id": 443, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1643:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 442, "name": "address", "nodeType": "ElementaryTypeName", "src": "1643:7:1", "typeDescriptions": {}}}, "id": 445, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1643:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 446, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 426, "src": "1658:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 438, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "1611:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1618:12:1", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1086, "src": "1611:19:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 447, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1611:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e41207472616e73666572206661696c6564", "id": 448, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1685:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3", "typeString": "literal_string \"TokenA transfer failed\""}, "value": "TokenA transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3", "typeString": "literal_string \"TokenA transfer failed\""}], "id": 437, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1590:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1590:129:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 450, "nodeType": "ExpressionStatement", "src": "1590:129:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 454, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1770:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1774:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "1770:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 458, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1790:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}], "id": 457, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1782:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 456, "name": "address", "nodeType": "ElementaryTypeName", "src": "1782:7:1", "typeDescriptions": {}}}, "id": 459, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1782:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 460, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "1797:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 452, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "1750:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 453, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1757:12:1", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1086, "src": "1750:19:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 461, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1750:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e42207472616e73666572206661696c6564", "id": 462, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1824:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db", "typeString": "literal_string \"TokenB transfer failed\""}, "value": "TokenB transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db", "typeString": "literal_string \"TokenB transfer failed\""}], "id": 451, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1729:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1729:129:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 464, "nodeType": "ExpressionStatement", "src": "1729:129:1"}, {"expression": {"id": 467, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 465, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "1867:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 466, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 426, "src": "1879:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1867:24:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 468, "nodeType": "ExpressionStatement", "src": "1867:24:1"}, {"eventCall": {"arguments": [{"expression": {"id": 470, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1921:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1925:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "1921:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 472, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 426, "src": "1933:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 473, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "1947:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 469, "name": "LiquidityAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "1906:14:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 474, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1906:54:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 475, "nodeType": "EmitStatement", "src": "1901:59:1"}]}, "documentation": {"id": 424, "nodeType": "StructuredDocumentation", "src": "1261:195:1", "text": " @dev Allows a user to add liquidity to the pool for both tokens.\n @param tokenAAmount The amount of tokenA to add.\n @param tokenBAmount The amount of tokenB to add."}, "functionSelector": "9cd441da", "id": 477, "implemented": true, "kind": "function", "modifiers": [{"id": 431, "kind": "modifierInvocation", "modifierName": {"id": 430, "name": "nonReentrant", "nameLocations": ["1536:12:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1120, "src": "1536:12:1"}, "nodeType": "ModifierInvocation", "src": "1536:12:1"}], "name": "addLiquidity", "nameLocation": "1470:12:1", "nodeType": "FunctionDefinition", "parameters": {"id": 429, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 426, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "1491:12:1", "nodeType": "VariableDeclaration", "scope": 477, "src": "1483:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1483:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 428, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "1513:12:1", "nodeType": "VariableDeclaration", "scope": 477, "src": "1505:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 427, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1505:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1482:44:1"}, "returnParameters": {"id": 432, "nodeType": "ParameterList", "parameters": [], "src": "1549:0:1"}, "scope": 791, "src": "1461:506:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [811], "body": {"id": 533, "nodeType": "Block", "src": "2275:434:1", "statements": [{"expression": {"id": 489, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 487, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "2285:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 488, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 480, "src": "2297:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2285:24:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 490, "nodeType": "ExpressionStatement", "src": "2285:24:1"}, {"expression": {"id": 493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 491, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "2319:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 492, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "2331:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2319:24:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 494, "nodeType": "ExpressionStatement", "src": "2319:24:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 496, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 480, "src": "2361:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 497, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "2377:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2361:24:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 499, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "2389:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 500, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "2405:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2389:24:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2361:52:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e742072657365727665732e", "id": 503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2415:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6f180cc3bdae344b598ca3e3c36346384c3c2ea2f18b10562405ee9d2bea5baf", "typeString": "literal_string \"Insufficient reserves.\""}, "value": "Insufficient reserves."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6f180cc3bdae344b598ca3e3c36346384c3c2ea2f18b10562405ee9d2bea5baf", "typeString": "literal_string \"Insufficient reserves.\""}], "id": 495, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2353:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 504, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2353:87:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 505, "nodeType": "ExpressionStatement", "src": "2353:87:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 509, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2483:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2487:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "2483:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 511, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 480, "src": "2495:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 507, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "2467:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2474:8:1", "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1054, "src": "2467:15:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2467:41:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e41207472616e73666572206661696c6564", "id": 513, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2510:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3", "typeString": "literal_string \"TokenA transfer failed\""}, "value": "TokenA transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3", "typeString": "literal_string \"TokenA transfer failed\""}], "id": 506, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2450:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 514, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2450:85:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 515, "nodeType": "ExpressionStatement", "src": "2450:85:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 519, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2578:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2582:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "2578:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 521, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "2590:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 517, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "2562:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2569:8:1", "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1054, "src": "2562:15:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 522, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2562:41:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e42207472616e73666572206661696c6564", "id": 523, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2605:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db", "typeString": "literal_string \"TokenB transfer failed\""}, "value": "TokenB transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db", "typeString": "literal_string \"TokenB transfer failed\""}], "id": 516, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2545:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 524, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2545:85:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 525, "nodeType": "ExpressionStatement", "src": "2545:85:1"}, {"eventCall": {"arguments": [{"expression": {"id": 527, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2663:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2667:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "2663:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 529, "name": "tokenAAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 480, "src": "2675:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 530, "name": "tokenBAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "2689:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 526, "name": "LiquidityRemoved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 849, "src": "2646:16:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2646:56:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 532, "nodeType": "EmitStatement", "src": "2641:61:1"}]}, "documentation": {"id": 478, "nodeType": "StructuredDocumentation", "src": "1973:206:1", "text": " @dev Allows a user to remove liquidity from the pool for both tokens.\n @param tokenAAmount The amount of tokenA to remove.\n @param tokenBAmount The amount of tokenB to remove."}, "functionSelector": "9d7de6b3", "id": 534, "implemented": true, "kind": "function", "modifiers": [{"id": 485, "kind": "modifierInvocation", "modifierName": {"id": 484, "name": "nonReentrant", "nameLocations": ["2262:12:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1120, "src": "2262:12:1"}, "nodeType": "ModifierInvocation", "src": "2262:12:1"}], "name": "removeLiquidity", "nameLocation": "2193:15:1", "nodeType": "FunctionDefinition", "parameters": {"id": 483, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 480, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "2217:12:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2209:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 479, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2209:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 482, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "2239:12:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2231:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 481, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2231:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2208:44:1"}, "returnParameters": {"id": 486, "nodeType": "ParameterList", "parameters": [], "src": "2275:0:1"}, "scope": 791, "src": "2184:525:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [821], "body": {"id": 647, "nodeType": "Block", "src": "3114:836:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 547, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3132:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 550, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "3151:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 549, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3143:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 548, "name": "address", "nodeType": "ElementaryTypeName", "src": "3143:7:1", "typeDescriptions": {}}}, "id": 551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3143:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3132:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 553, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3162:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 556, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "3181:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 555, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3173:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 554, "name": "address", "nodeType": "ElementaryTypeName", "src": "3173:7:1", "typeDescriptions": {}}}, "id": 557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3173:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3162:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3132:56:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c696420746f6b656e20616464726573732e", "id": 560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3190:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9528211e53dc979c00190f7635901cb006e7be03ed41cd218702a25d589fdc2b", "typeString": "literal_string \"Invalid token address.\""}, "value": "Invalid token address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9528211e53dc979c00190f7635901cb006e7be03ed41cd218702a25d589fdc2b", "typeString": "literal_string \"Invalid token address.\""}], "id": 546, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3124:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 561, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3124:91:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 562, "nodeType": "ExpressionStatement", "src": "3124:91:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 564, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3233:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3244:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3233:12:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 567, "name": "minAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 541, "src": "3249:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 568, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3264:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3249:16:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3233:32:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642074726164696e6720616d6f756e74732e", "id": 571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3267:26:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_026e459f155ec88ab3d753d35b6807da752731119eaea46a34223d860ddbb3a4", "typeString": "literal_string \"Invalid trading amounts.\""}, "value": "Invalid trading amounts."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_026e459f155ec88ab3d753d35b6807da752731119eaea46a34223d860ddbb3a4", "typeString": "literal_string \"Invalid trading amounts.\""}], "id": 563, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3225:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 572, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3225:69:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 573, "nodeType": "ExpressionStatement", "src": "3225:69:1"}, {"assignments": [576], "declarations": [{"constant": false, "id": 576, "mutability": "mutable", "name": "inputToken", "nameLocation": "3312:10:1", "nodeType": "VariableDeclaration", "scope": 647, "src": "3305:17:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}, "typeName": {"id": 575, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 574, "name": "IERC20", "nameLocations": ["3305:6:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1087, "src": "3305:6:1"}, "referencedDeclaration": 1087, "src": "3305:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 580, "initialValue": {"arguments": [{"id": 578, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3332:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 577, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1087, "src": "3325:6:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1087_$", "typeString": "type(contract IERC20)"}}, "id": 579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3325:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3305:35:1"}, {"assignments": [583], "declarations": [{"constant": false, "id": 583, "mutability": "mutable", "name": "outputToken", "nameLocation": "3357:11:1", "nodeType": "VariableDeclaration", "scope": 647, "src": "3350:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}, "typeName": {"id": 582, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 581, "name": "IERC20", "nameLocations": ["3350:6:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1087, "src": "3350:6:1"}, "referencedDeclaration": 1087, "src": "3350:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 594, "initialValue": {"condition": {"components": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 589, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 584, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3372:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 587, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "3391:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 586, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3383:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 585, "name": "address", "nodeType": "ElementaryTypeName", "src": "3383:7:1", "typeDescriptions": {}}}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3383:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3372:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 590, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3371:28:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 592, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "3411:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 593, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3371:46:1", "trueExpression": {"id": 591, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "3402:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3350:67:1"}, {"assignments": [596], "declarations": [{"constant": false, "id": 596, "mutability": "mutable", "name": "amountOut", "nameLocation": "3435:9:1", "nodeType": "VariableDeclaration", "scope": 647, "src": "3427:17:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 595, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3427:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 601, "initialValue": {"arguments": [{"id": 598, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3460:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 599, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3469:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 597, "name": "getAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 736, "src": "3447:12:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (address,uint256) view returns (uint256)"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3447:31:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3427:51:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 603, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "3497:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 604, "name": "minAmountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 541, "src": "3510:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3497:25:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "536c6970706167652065786365656465642e", "id": 606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3524:20:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_59062a8636e2f2600811a3f2ff8f336a1359b12235667756cc80753aa371f8b1", "typeString": "literal_string \"Slippage exceeded.\""}, "value": "Slippage exceeded."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_59062a8636e2f2600811a3f2ff8f336a1359b12235667756cc80753aa371f8b1", "typeString": "literal_string \"Slippage exceeded.\""}], "id": 602, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3489:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 607, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3489:56:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 608, "nodeType": "ExpressionStatement", "src": "3489:56:1"}, {"expression": {"arguments": [{"id": 610, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3570:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 611, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3579:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 612, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "3589:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 609, "name": "updateReserves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "3555:14:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3555:44:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 614, "nodeType": "ExpressionStatement", "src": "3555:44:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 618, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3655:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3659:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "3655:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 622, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3675:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MarketIntegration_$791", "typeString": "contract MarketIntegration"}], "id": 621, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3667:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 620, "name": "address", "nodeType": "ElementaryTypeName", "src": "3667:7:1", "typeDescriptions": {}}}, "id": 623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3667:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 624, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3682:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 616, "name": "inputToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "3631:10:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3642:12:1", "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1086, "src": "3631:23:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3631:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e70757420746f6b656e207472616e73666572206661696c6564", "id": 626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3705:29:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_76fb62ecf7f227c1dea7d4495743443e3900526a8a432017ab32f48d32c38f73", "typeString": "literal_string \"Input token transfer failed\""}, "value": "Input token transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_76fb62ecf7f227c1dea7d4495743443e3900526a8a432017ab32f48d32c38f73", "typeString": "literal_string \"Input token transfer failed\""}], "id": 615, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3610:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 627, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3610:134:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 628, "nodeType": "ExpressionStatement", "src": "3610:134:1"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 632, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3796:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3800:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "3796:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 634, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "3808:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 630, "name": "outputToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "3775:11:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3787:8:1", "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1054, "src": "3775:20:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3775:43:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f757470757420746f6b656e207472616e73666572206661696c6564", "id": 636, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3832:30:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12e0d452d44af3d45e61e49224597461bfc702e51a1dca3bfb1858b384d17151", "typeString": "literal_string \"Output token transfer failed\""}, "value": "Output token transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12e0d452d44af3d45e61e49224597461bfc702e51a1dca3bfb1858b384d17151", "typeString": "literal_string \"Output token transfer failed\""}], "id": 629, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3754:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 637, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3754:118:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 638, "nodeType": "ExpressionStatement", "src": "3754:118:1"}, {"eventCall": {"arguments": [{"expression": {"id": 640, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3902:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3906:6:1", "memberName": "sender", "nodeType": "MemberAccess", "src": "3902:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 642, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3914:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 643, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3923:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 644, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 596, "src": "3933:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 639, "name": "TradeExecuted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 860, "src": "3888:13:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256,uint256)"}}, "id": 645, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3888:55:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 646, "nodeType": "EmitStatement", "src": "3883:60:1"}]}, "documentation": {"id": 535, "nodeType": "StructuredDocumentation", "src": "2715:300:1", "text": " @dev Executes a trade from one token to another.\n @param tokenIn The address of the token being traded in.\n @param amountIn The amount of the input token being traded.\n @param minAmountOut The minimum amount of the output token expected (for slippage protection)."}, "functionSelector": "b44b96e1", "id": 648, "implemented": true, "kind": "function", "modifiers": [{"id": 544, "kind": "modifierInvocation", "modifierName": {"id": 543, "name": "nonReentrant", "nameLocations": ["3101:12:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 1120, "src": "3101:12:1"}, "nodeType": "ModifierInvocation", "src": "3101:12:1"}], "name": "trade", "nameLocation": "3029:5:1", "nodeType": "FunctionDefinition", "parameters": {"id": 542, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 537, "mutability": "mutable", "name": "tokenIn", "nameLocation": "3043:7:1", "nodeType": "VariableDeclaration", "scope": 648, "src": "3035:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 536, "name": "address", "nodeType": "ElementaryTypeName", "src": "3035:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 539, "mutability": "mutable", "name": "amountIn", "nameLocation": "3060:8:1", "nodeType": "VariableDeclaration", "scope": 648, "src": "3052:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 538, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3052:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 541, "mutability": "mutable", "name": "minAmountOut", "nameLocation": "3078:12:1", "nodeType": "VariableDeclaration", "scope": 648, "src": "3070:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 540, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3070:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3034:57:1"}, "returnParameters": {"id": 545, "nodeType": "ParameterList", "parameters": [], "src": "3114:0:1"}, "scope": 791, "src": "3020:930:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [831], "body": {"id": 735, "nodeType": "Block", "src": "4318:632:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 659, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 653, "src": "4336:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4347:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4336:12:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420696e206d75737420626520706f7369746976652e", "id": 662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4350:29:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e987343d741c7f6c753351bf43f004d3b6422c3bdaf3ab095da8c58119a97a1f", "typeString": "literal_string \"Amount in must be positive.\""}, "value": "Amount in must be positive."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e987343d741c7f6c753351bf43f004d3b6422c3bdaf3ab095da8c58119a97a1f", "typeString": "literal_string \"Amount in must be positive.\""}], "id": 658, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4328:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4328:52:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 664, "nodeType": "ExpressionStatement", "src": "4328:52:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 666, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "4398:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 669, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "4417:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4409:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 667, "name": "address", "nodeType": "ElementaryTypeName", "src": "4409:7:1", "typeDescriptions": {}}}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4409:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4398:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 672, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "4428:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 675, "name": "tokenB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "4447:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 674, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4439:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 673, "name": "address", "nodeType": "ElementaryTypeName", "src": "4439:7:1", "typeDescriptions": {}}}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4439:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4428:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4398:56:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c696420746f6b656e20616464726573732e", "id": 679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4456:24:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9528211e53dc979c00190f7635901cb006e7be03ed41cd218702a25d589fdc2b", "typeString": "literal_string \"Invalid token address.\""}, "value": "Invalid token address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9528211e53dc979c00190f7635901cb006e7be03ed41cd218702a25d589fdc2b", "typeString": "literal_string \"Invalid token address.\""}], "id": 665, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4390:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 680, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4390:91:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 681, "nodeType": "ExpressionStatement", "src": "4390:91:1"}, {"assignments": [683], "declarations": [{"constant": false, "id": 683, "mutability": "mutable", "name": "inputReserve", "nameLocation": "4500:12:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4492:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 682, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4492:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 693, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 689, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 684, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "4515:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 687, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "4534:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 686, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4526:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 685, "name": "address", "nodeType": "ElementaryTypeName", "src": "4526:7:1", "typeDescriptions": {}}}, "id": 688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4526:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4515:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 691, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "4555:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "4515:48:1", "trueExpression": {"id": 690, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "4544:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4492:71:1"}, {"assignments": [695], "declarations": [{"constant": false, "id": 695, "mutability": "mutable", "name": "outputReserve", "nameLocation": "4581:13:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4573:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 694, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4573:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 705, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 696, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "4597:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 699, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "4616:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 698, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4608:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 697, "name": "address", "nodeType": "ElementaryTypeName", "src": "4608:7:1", "typeDescriptions": {}}}, "id": 700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4608:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4597:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 703, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "4637:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "4597:48:1", "trueExpression": {"id": 702, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "4626:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4573:72:1"}, {"assignments": [707], "declarations": [{"constant": false, "id": 707, "mutability": "mutable", "name": "fee", "nameLocation": "4710:3:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4702:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4702:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 709, "initialValue": {"hexValue": "39393735", "id": 708, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4716:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_9975_by_1", "typeString": "int_const 9975"}, "value": "9975"}, "nodeType": "VariableDeclarationStatement", "src": "4702:18:1"}, {"assignments": [711], "declarations": [{"constant": false, "id": 711, "mutability": "mutable", "name": "amountInWithFee", "nameLocation": "4738:15:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4730:23:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4730:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 715, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 712, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 653, "src": "4756:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 713, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 707, "src": "4767:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4756:14:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4730:40:1"}, {"assignments": [717], "declarations": [{"constant": false, "id": 717, "mutability": "mutable", "name": "numerator", "nameLocation": "4788:9:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4780:17:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 716, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4780:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 721, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 720, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 718, "name": "amountInWithFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4800:15:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 719, "name": "outputReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 695, "src": "4818:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4800:31:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4780:51:1"}, {"assignments": [723], "declarations": [{"constant": false, "id": 723, "mutability": "mutable", "name": "denominator", "nameLocation": "4849:11:1", "nodeType": "VariableDeclaration", "scope": 735, "src": "4841:19:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 722, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4841:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 730, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 726, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 724, "name": "inputReserve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 683, "src": "4864:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3130303030", "id": 725, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4879:5:1", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "src": "4864:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 727, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4863:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 728, "name": "amountInWithFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4888:15:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4863:40:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4841:62:1"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 731, "name": "numerator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "4920:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 732, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 723, "src": "4932:11:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4920:23:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 657, "id": 734, "nodeType": "Return", "src": "4913:30:1"}]}, "documentation": {"id": 649, "nodeType": "StructuredDocumentation", "src": "3956:270:1", "text": " @dev Calculates the output amount for a given input amount using a simple formula.\n @param tokenIn The address of the input token.\n @param amountIn The amount of the input token.\n @return amountOut The calculated output token amount."}, "functionSelector": "ca706bcf", "id": 736, "implemented": true, "kind": "function", "modifiers": [], "name": "getAmountOut", "nameLocation": "4240:12:1", "nodeType": "FunctionDefinition", "parameters": {"id": 654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 651, "mutability": "mutable", "name": "tokenIn", "nameLocation": "4261:7:1", "nodeType": "VariableDeclaration", "scope": 736, "src": "4253:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 650, "name": "address", "nodeType": "ElementaryTypeName", "src": "4253:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 653, "mutability": "mutable", "name": "amountIn", "nameLocation": "4278:8:1", "nodeType": "VariableDeclaration", "scope": 736, "src": "4270:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 652, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4270:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4252:35:1"}, "returnParameters": {"id": 657, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 656, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 736, "src": "4309:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4309:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4308:9:1"}, "scope": 791, "src": "4231:719:1", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 771, "nodeType": "Block", "src": "5285:165:1", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 751, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 746, "name": "tokenIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "5294:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 749, "name": "tokenA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "5313:6:1", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$1087", "typeString": "contract IERC20"}], "id": 748, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5305:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 747, "name": "address", "nodeType": "ElementaryTypeName", "src": "5305:7:1", "typeDescriptions": {}}}, "id": 750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5305:15:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5294:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 769, "nodeType": "Block", "src": "5388:56:1", "statements": [{"expression": {"id": 763, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 761, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5394:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 762, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 741, "src": "5406:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5394:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 764, "nodeType": "ExpressionStatement", "src": "5394:20:1"}, {"expression": {"id": 767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 765, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5420:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 766, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5432:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5420:21:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 768, "nodeType": "ExpressionStatement", "src": "5420:21:1"}]}, "id": 770, "nodeType": "IfStatement", "src": "5291:153:1", "trueBody": {"id": 760, "nodeType": "Block", "src": "5322:60:1", "statements": [{"expression": {"id": 754, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 752, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5328:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 753, "name": "amountIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 741, "src": "5340:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5328:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 755, "nodeType": "ExpressionStatement", "src": "5328:20:1"}, {"expression": {"id": 758, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 756, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5354:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 757, "name": "amountOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5366:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5354:21:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 759, "nodeType": "ExpressionStatement", "src": "5354:21:1"}]}}]}, "documentation": {"id": 737, "nodeType": "StructuredDocumentation", "src": "4952:245:1", "text": " @dev Internal function to update reserves after a trade.\n @param tokenIn The address of the token being traded in.\n @param amountIn The amount of the input token.\n @param amountOut The amount of the output token."}, "id": 772, "implemented": true, "kind": "function", "modifiers": [], "name": "updateReserves", "nameLocation": "5208:14:1", "nodeType": "FunctionDefinition", "parameters": {"id": 744, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 739, "mutability": "mutable", "name": "tokenIn", "nameLocation": "5231:7:1", "nodeType": "VariableDeclaration", "scope": 772, "src": "5223:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 738, "name": "address", "nodeType": "ElementaryTypeName", "src": "5223:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 741, "mutability": "mutable", "name": "amountIn", "nameLocation": "5248:8:1", "nodeType": "VariableDeclaration", "scope": 772, "src": "5240:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 740, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5240:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 743, "mutability": "mutable", "name": "amountOut", "nameLocation": "5266:9:1", "nodeType": "VariableDeclaration", "scope": 772, "src": "5258:17:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 742, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5258:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5222:54:1"}, "returnParameters": {"id": 745, "nodeType": "ParameterList", "parameters": [], "src": "5285:0:1"}, "scope": 791, "src": "5199:251:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 780, "nodeType": "Block", "src": "5615:32:1", "statements": [{"expression": {"id": 778, "name": "reserveA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 379, "src": "5632:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 777, "id": 779, "nodeType": "Return", "src": "5625:15:1"}]}, "documentation": {"id": 773, "nodeType": "StructuredDocumentation", "src": "5456:99:1", "text": " @dev Public getter for reserveA.\n @return The amount of token A in reserve."}, "functionSelector": "74042d2c", "id": 781, "implemented": true, "kind": "function", "modifiers": [], "name": "getReserveA", "nameLocation": "5569:11:1", "nodeType": "FunctionDefinition", "parameters": {"id": 774, "nodeType": "ParameterList", "parameters": [], "src": "5580:2:1"}, "returnParameters": {"id": 777, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 776, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 781, "src": "5606:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 775, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5606:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5605:9:1"}, "scope": 791, "src": "5560:87:1", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 789, "nodeType": "Block", "src": "5813:32:1", "statements": [{"expression": {"id": 787, "name": "reserveB", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5830:8:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 786, "id": 788, "nodeType": "Return", "src": "5823:15:1"}]}, "documentation": {"id": 782, "nodeType": "StructuredDocumentation", "src": "5653:100:1", "text": " @dev Public getter for reserveB.\n @return The amount of token B in reserve."}, "functionSelector": "edd78c94", "id": 790, "implemented": true, "kind": "function", "modifiers": [], "name": "getReserveB", "nameLocation": "5767:11:1", "nodeType": "FunctionDefinition", "parameters": {"id": 783, "nodeType": "ParameterList", "parameters": [], "src": "5778:2:1"}, "returnParameters": {"id": 786, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 785, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 790, "src": "5804:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 784, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5804:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5803:9:1"}, "scope": 791, "src": "5758:87:1", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 792, "src": "553:5296:1", "usedErrors": [875, 880, 1101], "usedEvents": [840, 849, 860, 886]}], "src": "32:5818:1"}}, "/home/wejdene/thesis/NFT-F/interfaces/IMarketIntegration.sol": {"AST": {"absolutePath": "interfaces/IMarketIntegration.sol", "exportedSymbols": {"IERC20": [1087], "IMarketIntegration": [861]}, "id": 862, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 793, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "32:24:2"}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 794, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 862, "sourceUnit": 1088, "src": "58:72:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "IMarketIntegration", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 795, "nodeType": "StructuredDocumentation", "src": "132:153:2", "text": " @title IMarketIntegration\n @dev Interface for interacting with a LiquidityPool contract, allowing for adding/removing liquidity and trading."}, "fullyImplemented": false, "id": 861, "linearizedBaseContracts": [861], "name": "IMarketIntegration", "nameLocation": "296:18:2", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 796, "nodeType": "StructuredDocumentation", "src": "321:249:2", "text": " @notice Adds liquidity to the pool in exchange for pool tokens.\n @param tokenAAmount Amount of tokenA to add to the pool.\n @param tokenBAmount Amount of tokenB to add to the pool.\n Emits a {LiquidityAdded} event."}, "functionSelector": "9cd441da", "id": 803, "implemented": false, "kind": "function", "modifiers": [], "name": "addLiquidity", "nameLocation": "584:12:2", "nodeType": "FunctionDefinition", "parameters": {"id": 801, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 798, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "605:12:2", "nodeType": "VariableDeclaration", "scope": 803, "src": "597:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 797, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "597:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 800, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "627:12:2", "nodeType": "VariableDeclaration", "scope": 803, "src": "619:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 799, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "619:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "596:44:2"}, "returnParameters": {"id": 802, "nodeType": "ParameterList", "parameters": [], "src": "649:0:2"}, "scope": 861, "src": "575:75:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 804, "nodeType": "StructuredDocumentation", "src": "656:272:2", "text": " @notice Removes liquidity from the pool and returns the underlying tokens.\n @param tokenAAmount Amount of tokenA to remove from the pool.\n @param tokenBAmount Amount of tokenB to remove from the pool.\n Emits a {LiquidityRemoved} event."}, "functionSelector": "9d7de6b3", "id": 811, "implemented": false, "kind": "function", "modifiers": [], "name": "removeLiquidity", "nameLocation": "942:15:2", "nodeType": "FunctionDefinition", "parameters": {"id": 809, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 806, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "966:12:2", "nodeType": "VariableDeclaration", "scope": 811, "src": "958:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 805, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "958:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 808, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "988:12:2", "nodeType": "VariableDeclaration", "scope": 811, "src": "980:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 807, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "980:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "957:44:2"}, "returnParameters": {"id": 810, "nodeType": "ParameterList", "parameters": [], "src": "1010:0:2"}, "scope": 861, "src": "933:78:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 812, "nodeType": "StructuredDocumentation", "src": "1017:341:2", "text": " @notice Executes a trade between tokenA and tokenB.\n @param tokenIn Address of the token being traded in.\n @param amountIn Amount of the input token being traded.\n @param minAmountOut Minimum amount of the output token that must be received for the trade to proceed.\n Emits a {TradeExecuted} event."}, "functionSelector": "b44b96e1", "id": 821, "implemented": false, "kind": "function", "modifiers": [], "name": "trade", "nameLocation": "1372:5:2", "nodeType": "FunctionDefinition", "parameters": {"id": 819, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 814, "mutability": "mutable", "name": "tokenIn", "nameLocation": "1386:7:2", "nodeType": "VariableDeclaration", "scope": 821, "src": "1378:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 813, "name": "address", "nodeType": "ElementaryTypeName", "src": "1378:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 816, "mutability": "mutable", "name": "amountIn", "nameLocation": "1403:8:2", "nodeType": "VariableDeclaration", "scope": 821, "src": "1395:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1395:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 818, "mutability": "mutable", "name": "minAmountOut", "nameLocation": "1421:12:2", "nodeType": "VariableDeclaration", "scope": 821, "src": "1413:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 817, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1413:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1377:57:2"}, "returnParameters": {"id": 820, "nodeType": "ParameterList", "parameters": [], "src": "1443:0:2"}, "scope": 861, "src": "1363:81:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 822, "nodeType": "StructuredDocumentation", "src": "1450:273:2", "text": " @notice Calculates the output amount for a given input amount using the constant product formula.\n @param tokenIn Address of the input token.\n @param amountIn Amount of the input token.\n @return amountOut Calculated output token amount."}, "functionSelector": "ca706bcf", "id": 831, "implemented": false, "kind": "function", "modifiers": [], "name": "getAmountOut", "nameLocation": "1737:12:2", "nodeType": "FunctionDefinition", "parameters": {"id": 827, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 824, "mutability": "mutable", "name": "tokenIn", "nameLocation": "1758:7:2", "nodeType": "VariableDeclaration", "scope": 831, "src": "1750:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 823, "name": "address", "nodeType": "ElementaryTypeName", "src": "1750:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 826, "mutability": "mutable", "name": "amountIn", "nameLocation": "1775:8:2", "nodeType": "VariableDeclaration", "scope": 831, "src": "1767:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 825, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1767:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1749:35:2"}, "returnParameters": {"id": 830, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 829, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 831, "src": "1808:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 828, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1808:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1807:9:2"}, "scope": 861, "src": "1728:89:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"anonymous": false, "documentation": {"id": 832, "nodeType": "StructuredDocumentation", "src": "1837:228:2", "text": " @dev Emitted when liquidity is added to the pool.\n @param provider Address of the liquidity provider.\n @param tokenAAmount Amount of tokenA added.\n @param tokenBAmount Amount of tokenB added."}, "eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45", "id": 840, "name": "LiquidityAdded", "nameLocation": "2076:14:2", "nodeType": "EventDefinition", "parameters": {"id": 839, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 834, "indexed": true, "mutability": "mutable", "name": "provider", "nameLocation": "2107:8:2", "nodeType": "VariableDeclaration", "scope": 840, "src": "2091:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 833, "name": "address", "nodeType": "ElementaryTypeName", "src": "2091:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 836, "indexed": false, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "2125:12:2", "nodeType": "VariableDeclaration", "scope": 840, "src": "2117:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 835, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2117:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 838, "indexed": false, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "2147:12:2", "nodeType": "VariableDeclaration", "scope": 840, "src": "2139:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 837, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2139:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2090:70:2"}, "src": "2070:91:2"}, {"anonymous": false, "documentation": {"id": 841, "nodeType": "StructuredDocumentation", "src": "2167:236:2", "text": " @dev Emitted when liquidity is removed from the pool.\n @param provider Address of the liquidity provider.\n @param tokenAAmount Amount of tokenA removed.\n @param tokenBAmount Amount of tokenB removed."}, "eventSelector": "96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059", "id": 849, "name": "LiquidityRemoved", "nameLocation": "2414:16:2", "nodeType": "EventDefinition", "parameters": {"id": 848, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 843, "indexed": true, "mutability": "mutable", "name": "provider", "nameLocation": "2447:8:2", "nodeType": "VariableDeclaration", "scope": 849, "src": "2431:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 842, "name": "address", "nodeType": "ElementaryTypeName", "src": "2431:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 845, "indexed": false, "mutability": "mutable", "name": "tokenAAmount", "nameLocation": "2465:12:2", "nodeType": "VariableDeclaration", "scope": 849, "src": "2457:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 844, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2457:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 847, "indexed": false, "mutability": "mutable", "name": "tokenBAmount", "nameLocation": "2487:12:2", "nodeType": "VariableDeclaration", "scope": 849, "src": "2479:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 846, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2479:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2430:70:2"}, "src": "2408:93:2"}, {"anonymous": false, "documentation": {"id": 850, "nodeType": "StructuredDocumentation", "src": "2507:285:2", "text": " @dev Emitted when a trade is executed in the pool.\n @param trader Address of the trader.\n @param tokenIn Address of the token traded in.\n @param amountIn Amount of the input token traded.\n @param amountOut Amount of the output token received."}, "eventSelector": "54424bcd37c121359634358c4b6124e821af711811c1ad2fb8f96b94b046338c", "id": 860, "name": "TradeExecuted", "nameLocation": "2803:13:2", "nodeType": "EventDefinition", "parameters": {"id": 859, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 852, "indexed": true, "mutability": "mutable", "name": "trader", "nameLocation": "2833:6:2", "nodeType": "VariableDeclaration", "scope": 860, "src": "2817:22:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 851, "name": "address", "nodeType": "ElementaryTypeName", "src": "2817:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 854, "indexed": true, "mutability": "mutable", "name": "tokenIn", "nameLocation": "2857:7:2", "nodeType": "VariableDeclaration", "scope": 860, "src": "2841:23:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 853, "name": "address", "nodeType": "ElementaryTypeName", "src": "2841:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 856, "indexed": false, "mutability": "mutable", "name": "amountIn", "nameLocation": "2874:8:2", "nodeType": "VariableDeclaration", "scope": 860, "src": "2866:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 855, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2866:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 858, "indexed": false, "mutability": "mutable", "name": "amountOut", "nameLocation": "2892:9:2", "nodeType": "VariableDeclaration", "scope": 860, "src": "2884:17:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 857, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2884:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2816:86:2"}, "src": "2797:106:2"}], "scope": 862, "src": "286:2619:2", "usedErrors": [], "usedEvents": [840, 849, 860]}], "src": "32:2874:2"}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/access/Ownable.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol", "exportedSymbols": {"Context": [1186], "Ownable": [1009]}, "id": 1010, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 863, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "102:24:3"}, {"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol", "file": "../utils/Context.sol", "id": 865, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1010, "sourceUnit": 1187, "src": "128:45:3", "symbolAliases": [{"foreign": {"id": 864, "name": "Context", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1186, "src": "136:7:3", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"abstract": true, "baseContracts": [{"baseName": {"id": 867, "name": "Context", "nameLocations": ["692:7:3"], "nodeType": "IdentifierPath", "referencedDeclaration": 1186, "src": "692:7:3"}, "id": 868, "nodeType": "InheritanceSpecifier", "src": "692:7:3"}], "canonicalName": "Ownable", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 866, "nodeType": "StructuredDocumentation", "src": "175:487:3", "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."}, "fullyImplemented": true, "id": 1009, "linearizedBaseContracts": [1009, 1186], "name": "Ownable", "nameLocation": "681:7:3", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 870, "mutability": "mutable", "name": "_owner", "nameLocation": "722:6:3", "nodeType": "VariableDeclaration", "scope": 1009, "src": "706:22:3", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 869, "name": "address", "nodeType": "ElementaryTypeName", "src": "706:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"documentation": {"id": 871, "nodeType": "StructuredDocumentation", "src": "735:85:3", "text": " @dev The caller account is not authorized to perform an operation."}, "errorSelector": "118cdaa7", "id": 875, "name": "OwnableUnauthorizedAccount", "nameLocation": "831:26:3", "nodeType": "ErrorDefinition", "parameters": {"id": 874, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 873, "mutability": "mutable", "name": "account", "nameLocation": "866:7:3", "nodeType": "VariableDeclaration", "scope": 875, "src": "858:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 872, "name": "address", "nodeType": "ElementaryTypeName", "src": "858:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "857:17:3"}, "src": "825:50:3"}, {"documentation": {"id": 876, "nodeType": "StructuredDocumentation", "src": "881:82:3", "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"}, "errorSelector": "1e4fbdf7", "id": 880, "name": "OwnableInvalidOwner", "nameLocation": "974:19:3", "nodeType": "ErrorDefinition", "parameters": {"id": 879, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 878, "mutability": "mutable", "name": "owner", "nameLocation": "1002:5:3", "nodeType": "VariableDeclaration", "scope": 880, "src": "994:13:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 877, "name": "address", "nodeType": "ElementaryTypeName", "src": "994:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "993:15:3"}, "src": "968:41:3"}, {"anonymous": false, "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0", "id": 886, "name": "OwnershipTransferred", "nameLocation": "1021:20:3", "nodeType": "EventDefinition", "parameters": {"id": 885, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 882, "indexed": true, "mutability": "mutable", "name": "previousOwner", "nameLocation": "1058:13:3", "nodeType": "VariableDeclaration", "scope": 886, "src": "1042:29:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 881, "name": "address", "nodeType": "ElementaryTypeName", "src": "1042:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 884, "indexed": true, "mutability": "mutable", "name": "newOwner", "nameLocation": "1089:8:3", "nodeType": "VariableDeclaration", "scope": 886, "src": "1073:24:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 883, "name": "address", "nodeType": "ElementaryTypeName", "src": "1073:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1041:57:3"}, "src": "1015:84:3"}, {"body": {"id": 911, "nodeType": "Block", "src": "1259:153:3", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 897, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 892, "name": "initialOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 889, "src": "1273:12:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 895, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1297:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 894, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1289:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 893, "name": "address", "nodeType": "ElementaryTypeName", "src": "1289:7:3", "typeDescriptions": {}}}, "id": 896, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1289:10:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1273:26:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 906, "nodeType": "IfStatement", "src": "1269:95:3", "trueBody": {"id": 905, "nodeType": "Block", "src": "1301:63:3", "statements": [{"errorCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 901, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1350:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 900, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1342:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 899, "name": "address", "nodeType": "ElementaryTypeName", "src": "1342:7:3", "typeDescriptions": {}}}, "id": 902, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1342:10:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 898, "name": "OwnableInvalidOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 880, "src": "1322:19:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure"}}, "id": 903, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1322:31:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 904, "nodeType": "RevertStatement", "src": "1315:38:3"}]}}, {"expression": {"arguments": [{"id": 908, "name": "initialOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 889, "src": "1392:12:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 907, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1008, "src": "1373:18:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 909, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1373:32:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 910, "nodeType": "ExpressionStatement", "src": "1373:32:3"}]}, "documentation": {"id": 887, "nodeType": "StructuredDocumentation", "src": "1105:115:3", "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."}, "id": 912, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 890, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 889, "mutability": "mutable", "name": "initialOwner", "nameLocation": "1245:12:3", "nodeType": "VariableDeclaration", "scope": 912, "src": "1237:20:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 888, "name": "address", "nodeType": "ElementaryTypeName", "src": "1237:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1236:22:3"}, "returnParameters": {"id": 891, "nodeType": "ParameterList", "parameters": [], "src": "1259:0:3"}, "scope": 1009, "src": "1225:187:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 919, "nodeType": "Block", "src": "1521:41:3", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 915, "name": "_checkOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 946, "src": "1531:11:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$__$", "typeString": "function () view"}}, "id": 916, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1531:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 917, "nodeType": "ExpressionStatement", "src": "1531:13:3"}, {"id": 918, "nodeType": "PlaceholderStatement", "src": "1554:1:3"}]}, "documentation": {"id": 913, "nodeType": "StructuredDocumentation", "src": "1418:77:3", "text": " @dev Throws if called by any account other than the owner."}, "id": 920, "name": "onlyOwner", "nameLocation": "1509:9:3", "nodeType": "ModifierDefinition", "parameters": {"id": 914, "nodeType": "ParameterList", "parameters": [], "src": "1518:2:3"}, "src": "1500:62:3", "virtual": false, "visibility": "internal"}, {"body": {"id": 928, "nodeType": "Block", "src": "1693:30:3", "statements": [{"expression": {"id": 926, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 870, "src": "1710:6:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 925, "id": 927, "nodeType": "Return", "src": "1703:13:3"}]}, "documentation": {"id": 921, "nodeType": "StructuredDocumentation", "src": "1568:65:3", "text": " @dev Returns the address of the current owner."}, "functionSelector": "8da5cb5b", "id": 929, "implemented": true, "kind": "function", "modifiers": [], "name": "owner", "nameLocation": "1647:5:3", "nodeType": "FunctionDefinition", "parameters": {"id": 922, "nodeType": "ParameterList", "parameters": [], "src": "1652:2:3"}, "returnParameters": {"id": 925, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 924, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 929, "src": "1684:7:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 923, "name": "address", "nodeType": "ElementaryTypeName", "src": "1684:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1683:9:3"}, "scope": 1009, "src": "1638:85:3", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 945, "nodeType": "Block", "src": "1841:117:3", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 937, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 933, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 929, "src": "1855:5:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 934, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1855:7:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 935, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "1866:10:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 936, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1866:12:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1855:23:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 944, "nodeType": "IfStatement", "src": "1851:101:3", "trueBody": {"id": 943, "nodeType": "Block", "src": "1880:72:3", "statements": [{"errorCall": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 939, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "1928:10:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1928:12:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 938, "name": "OwnableUnauthorizedAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 875, "src": "1901:26:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure"}}, "id": 941, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1901:40:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 942, "nodeType": "RevertStatement", "src": "1894:47:3"}]}}]}, "documentation": {"id": 930, "nodeType": "StructuredDocumentation", "src": "1729:62:3", "text": " @dev Throws if the sender is not the owner."}, "id": 946, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOwner", "nameLocation": "1805:11:3", "nodeType": "FunctionDefinition", "parameters": {"id": 931, "nodeType": "ParameterList", "parameters": [], "src": "1816:2:3"}, "returnParameters": {"id": 932, "nodeType": "ParameterList", "parameters": [], "src": "1841:0:3"}, "scope": 1009, "src": "1796:162:3", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 959, "nodeType": "Block", "src": "2347:47:3", "statements": [{"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 955, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2384:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 954, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2376:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 953, "name": "address", "nodeType": "ElementaryTypeName", "src": "2376:7:3", "typeDescriptions": {}}}, "id": 956, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2376:10:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 952, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1008, "src": "2357:18:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2357:30:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 958, "nodeType": "ExpressionStatement", "src": "2357:30:3"}]}, "documentation": {"id": 947, "nodeType": "StructuredDocumentation", "src": "1964:324:3", "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."}, "functionSelector": "715018a6", "id": 960, "implemented": true, "kind": "function", "modifiers": [{"id": 950, "kind": "modifierInvocation", "modifierName": {"id": 949, "name": "onlyOwner", "nameLocations": ["2337:9:3"], "nodeType": "IdentifierPath", "referencedDeclaration": 920, "src": "2337:9:3"}, "nodeType": "ModifierInvocation", "src": "2337:9:3"}], "name": "renounceOwnership", "nameLocation": "2302:17:3", "nodeType": "FunctionDefinition", "parameters": {"id": 948, "nodeType": "ParameterList", "parameters": [], "src": "2319:2:3"}, "returnParameters": {"id": 951, "nodeType": "ParameterList", "parameters": [], "src": "2347:0:3"}, "scope": 1009, "src": "2293:101:3", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 987, "nodeType": "Block", "src": "2613:145:3", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 968, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 963, "src": "2627:8:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 971, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2647:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 970, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2639:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 969, "name": "address", "nodeType": "ElementaryTypeName", "src": "2639:7:3", "typeDescriptions": {}}}, "id": 972, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2639:10:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2627:22:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 982, "nodeType": "IfStatement", "src": "2623:91:3", "trueBody": {"id": 981, "nodeType": "Block", "src": "2651:63:3", "statements": [{"errorCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 977, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2700:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 976, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2692:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 975, "name": "address", "nodeType": "ElementaryTypeName", "src": "2692:7:3", "typeDescriptions": {}}}, "id": 978, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2692:10:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 974, "name": "OwnableInvalidOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 880, "src": "2672:19:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$", "typeString": "function (address) pure"}}, "id": 979, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2672:31:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 980, "nodeType": "RevertStatement", "src": "2665:38:3"}]}}, {"expression": {"arguments": [{"id": 984, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 963, "src": "2742:8:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 983, "name": "_transferOwnership", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1008, "src": "2723:18:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 985, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2723:28:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 986, "nodeType": "ExpressionStatement", "src": "2723:28:3"}]}, "documentation": {"id": 961, "nodeType": "StructuredDocumentation", "src": "2400:138:3", "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."}, "functionSelector": "f2fde38b", "id": 988, "implemented": true, "kind": "function", "modifiers": [{"id": 966, "kind": "modifierInvocation", "modifierName": {"id": 965, "name": "onlyOwner", "nameLocations": ["2603:9:3"], "nodeType": "IdentifierPath", "referencedDeclaration": 920, "src": "2603:9:3"}, "nodeType": "ModifierInvocation", "src": "2603:9:3"}], "name": "transferOwnership", "nameLocation": "2552:17:3", "nodeType": "FunctionDefinition", "parameters": {"id": 964, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 963, "mutability": "mutable", "name": "newOwner", "nameLocation": "2578:8:3", "nodeType": "VariableDeclaration", "scope": 988, "src": "2570:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 962, "name": "address", "nodeType": "ElementaryTypeName", "src": "2570:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2569:18:3"}, "returnParameters": {"id": 967, "nodeType": "ParameterList", "parameters": [], "src": "2613:0:3"}, "scope": 1009, "src": "2543:215:3", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 1007, "nodeType": "Block", "src": "2975:124:3", "statements": [{"assignments": [995], "declarations": [{"constant": false, "id": 995, "mutability": "mutable", "name": "oldOwner", "nameLocation": "2993:8:3", "nodeType": "VariableDeclaration", "scope": 1007, "src": "2985:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 994, "name": "address", "nodeType": "ElementaryTypeName", "src": "2985:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 997, "initialValue": {"id": 996, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 870, "src": "3004:6:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2985:25:3"}, {"expression": {"id": 1000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 998, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 870, "src": "3020:6:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 999, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "3029:8:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3020:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1001, "nodeType": "ExpressionStatement", "src": "3020:17:3"}, {"eventCall": {"arguments": [{"id": 1003, "name": "oldOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 995, "src": "3073:8:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1004, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "3083:8:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1002, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 886, "src": "3052:20:3", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 1005, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3052:40:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1006, "nodeType": "EmitStatement", "src": "3047:45:3"}]}, "documentation": {"id": 989, "nodeType": "StructuredDocumentation", "src": "2764:143:3", "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."}, "id": 1008, "implemented": true, "kind": "function", "modifiers": [], "name": "_transferOwnership", "nameLocation": "2921:18:3", "nodeType": "FunctionDefinition", "parameters": {"id": 992, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 991, "mutability": "mutable", "name": "newOwner", "nameLocation": "2948:8:3", "nodeType": "VariableDeclaration", "scope": 1008, "src": "2940:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 990, "name": "address", "nodeType": "ElementaryTypeName", "src": "2940:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2939:18:3"}, "returnParameters": {"id": 993, "nodeType": "ParameterList", "parameters": [], "src": "2975:0:3"}, "scope": 1009, "src": "2912:187:3", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 1010, "src": "663:2438:3", "usedErrors": [875, 880], "usedEvents": [886]}], "src": "102:3000:3"}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "exportedSymbols": {"IERC20": [1087]}, "id": 1088, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1011, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "106:24:4"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC20", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1012, "nodeType": "StructuredDocumentation", "src": "132:70:4", "text": " @dev Interface of the ERC20 standard as defined in the EIP."}, "fullyImplemented": false, "id": 1087, "linearizedBaseContracts": [1087], "name": "IERC20", "nameLocation": "213:6:4", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": {"id": 1013, "nodeType": "StructuredDocumentation", "src": "226:158:4", "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."}, "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "id": 1021, "name": "Transfer", "nameLocation": "395:8:4", "nodeType": "EventDefinition", "parameters": {"id": 1020, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1015, "indexed": true, "mutability": "mutable", "name": "from", "nameLocation": "420:4:4", "nodeType": "VariableDeclaration", "scope": 1021, "src": "404:20:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1014, "name": "address", "nodeType": "ElementaryTypeName", "src": "404:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1017, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "442:2:4", "nodeType": "VariableDeclaration", "scope": 1021, "src": "426:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1016, "name": "address", "nodeType": "ElementaryTypeName", "src": "426:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1019, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "454:5:4", "nodeType": "VariableDeclaration", "scope": 1021, "src": "446:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1018, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "446:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "403:57:4"}, "src": "389:72:4"}, {"anonymous": false, "documentation": {"id": 1022, "nodeType": "StructuredDocumentation", "src": "467:148:4", "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."}, "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "id": 1030, "name": "Approval", "nameLocation": "626:8:4", "nodeType": "EventDefinition", "parameters": {"id": 1029, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1024, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "651:5:4", "nodeType": "VariableDeclaration", "scope": 1030, "src": "635:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1023, "name": "address", "nodeType": "ElementaryTypeName", "src": "635:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1026, "indexed": true, "mutability": "mutable", "name": "spender", "nameLocation": "674:7:4", "nodeType": "VariableDeclaration", "scope": 1030, "src": "658:23:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1025, "name": "address", "nodeType": "ElementaryTypeName", "src": "658:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1028, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "691:5:4", "nodeType": "VariableDeclaration", "scope": 1030, "src": "683:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1027, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "683:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "634:63:4"}, "src": "620:78:4"}, {"documentation": {"id": 1031, "nodeType": "StructuredDocumentation", "src": "704:65:4", "text": " @dev Returns the value of tokens in existence."}, "functionSelector": "18160ddd", "id": 1036, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "783:11:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1032, "nodeType": "ParameterList", "parameters": [], "src": "794:2:4"}, "returnParameters": {"id": 1035, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1034, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1036, "src": "820:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "820:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "819:9:4"}, "scope": 1087, "src": "774:55:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1037, "nodeType": "StructuredDocumentation", "src": "835:71:4", "text": " @dev Returns the value of tokens owned by `account`."}, "functionSelector": "70a08231", "id": 1044, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "920:9:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1040, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1039, "mutability": "mutable", "name": "account", "nameLocation": "938:7:4", "nodeType": "VariableDeclaration", "scope": 1044, "src": "930:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1038, "name": "address", "nodeType": "ElementaryTypeName", "src": "930:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "929:17:4"}, "returnParameters": {"id": 1043, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1042, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1044, "src": "970:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1041, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "970:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "969:9:4"}, "scope": 1087, "src": "911:68:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1045, "nodeType": "StructuredDocumentation", "src": "985:213:4", "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "a9059cbb", "id": 1054, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "1212:8:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1050, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1047, "mutability": "mutable", "name": "to", "nameLocation": "1229:2:4", "nodeType": "VariableDeclaration", "scope": 1054, "src": "1221:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1046, "name": "address", "nodeType": "ElementaryTypeName", "src": "1221:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1049, "mutability": "mutable", "name": "value", "nameLocation": "1241:5:4", "nodeType": "VariableDeclaration", "scope": 1054, "src": "1233:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1048, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1233:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1220:27:4"}, "returnParameters": {"id": 1053, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1052, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1054, "src": "1266:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1051, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1266:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1265:6:4"}, "scope": 1087, "src": "1203:69:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1055, "nodeType": "StructuredDocumentation", "src": "1278:264:4", "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."}, "functionSelector": "dd62ed3e", "id": 1064, "implemented": false, "kind": "function", "modifiers": [], "name": "allowance", "nameLocation": "1556:9:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1060, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1057, "mutability": "mutable", "name": "owner", "nameLocation": "1574:5:4", "nodeType": "VariableDeclaration", "scope": 1064, "src": "1566:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1056, "name": "address", "nodeType": "ElementaryTypeName", "src": "1566:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1059, "mutability": "mutable", "name": "spender", "nameLocation": "1589:7:4", "nodeType": "VariableDeclaration", "scope": 1064, "src": "1581:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1058, "name": "address", "nodeType": "ElementaryTypeName", "src": "1581:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1565:32:4"}, "returnParameters": {"id": 1063, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1062, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1064, "src": "1621:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1061, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1621:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1620:9:4"}, "scope": 1087, "src": "1547:83:4", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1065, "nodeType": "StructuredDocumentation", "src": "1636:667:4", "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."}, "functionSelector": "095ea7b3", "id": 1074, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "2317:7:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1070, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1067, "mutability": "mutable", "name": "spender", "nameLocation": "2333:7:4", "nodeType": "VariableDeclaration", "scope": 1074, "src": "2325:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1066, "name": "address", "nodeType": "ElementaryTypeName", "src": "2325:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1069, "mutability": "mutable", "name": "value", "nameLocation": "2350:5:4", "nodeType": "VariableDeclaration", "scope": 1074, "src": "2342:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1068, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2342:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2324:32:4"}, "returnParameters": {"id": 1073, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1072, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1074, "src": "2375:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1071, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2375:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2374:6:4"}, "scope": 1087, "src": "2308:73:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1075, "nodeType": "StructuredDocumentation", "src": "2387:297:4", "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "23b872dd", "id": 1086, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "2698:12:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1082, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1077, "mutability": "mutable", "name": "from", "nameLocation": "2719:4:4", "nodeType": "VariableDeclaration", "scope": 1086, "src": "2711:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1076, "name": "address", "nodeType": "ElementaryTypeName", "src": "2711:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1079, "mutability": "mutable", "name": "to", "nameLocation": "2733:2:4", "nodeType": "VariableDeclaration", "scope": 1086, "src": "2725:10:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1078, "name": "address", "nodeType": "ElementaryTypeName", "src": "2725:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1081, "mutability": "mutable", "name": "value", "nameLocation": "2745:5:4", "nodeType": "VariableDeclaration", "scope": 1086, "src": "2737:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1080, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2737:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2710:41:4"}, "returnParameters": {"id": 1085, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1084, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1086, "src": "2770:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1083, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2770:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2769:6:4"}, "scope": 1087, "src": "2689:87:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 1088, "src": "203:2575:4", "usedErrors": [], "usedEvents": [1021, 1030]}], "src": "106:2673:4"}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/Context.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol", "exportedSymbols": {"Context": [1186]}, "id": 1187, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1158, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "101:24:5"}, {"abstract": true, "baseContracts": [], "canonicalName": "Context", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1159, "nodeType": "StructuredDocumentation", "src": "127:496:5", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."}, "fullyImplemented": true, "id": 1186, "linearizedBaseContracts": [1186], "name": "Context", "nameLocation": "642:7:5", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 1167, "nodeType": "Block", "src": "718:34:5", "statements": [{"expression": {"expression": {"id": 1164, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "735:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "739:6:5", "memberName": "sender", "nodeType": "MemberAccess", "src": "735:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 1163, "id": 1166, "nodeType": "Return", "src": "728:17:5"}]}, "id": 1168, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nameLocation": "665:10:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1160, "nodeType": "ParameterList", "parameters": [], "src": "675:2:5"}, "returnParameters": {"id": 1163, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1162, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1168, "src": "709:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1161, "name": "address", "nodeType": "ElementaryTypeName", "src": "709:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "708:9:5"}, "scope": 1186, "src": "656:96:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1176, "nodeType": "Block", "src": "825:32:5", "statements": [{"expression": {"expression": {"id": 1173, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "842:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "846:4:5", "memberName": "data", "nodeType": "MemberAccess", "src": "842:8:5", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 1172, "id": 1175, "nodeType": "Return", "src": "835:15:5"}]}, "id": 1177, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nameLocation": "767:8:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1169, "nodeType": "ParameterList", "parameters": [], "src": "775:2:5"}, "returnParameters": {"id": 1172, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1171, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1177, "src": "809:14:5", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1170, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "809:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "808:16:5"}, "scope": 1186, "src": "758:99:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1184, "nodeType": "Block", "src": "935:25:5", "statements": [{"expression": {"hexValue": "30", "id": 1182, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "952:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 1181, "id": 1183, "nodeType": "Return", "src": "945:8:5"}]}, "id": 1185, "implemented": true, "kind": "function", "modifiers": [], "name": "_contextSuffixLength", "nameLocation": "872:20:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1178, "nodeType": "ParameterList", "parameters": [], "src": "892:2:5"}, "returnParameters": {"id": 1181, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1180, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1185, "src": "926:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1179, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "926:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "925:9:5"}, "scope": 1186, "src": "863:97:5", "stateMutability": "view", "virtual": true, "visibility": "internal"}], "scope": 1187, "src": "624:338:5", "usedErrors": [], "usedEvents": []}], "src": "101:862:5"}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol": {"AST": {"absolutePath": "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol", "exportedSymbols": {"ReentrancyGuard": [1156]}, "id": 1157, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1089, "literals": ["solidity", "^", "0.8", ".20"], "nodeType": "PragmaDirective", "src": "109:24:6"}, {"abstract": true, "baseContracts": [], "canonicalName": "ReentrancyGuard", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1090, "nodeType": "StructuredDocumentation", "src": "135:750:6", "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."}, "fullyImplemented": true, "id": 1156, "linearizedBaseContracts": [1156], "name": "ReentrancyGuard", "nameLocation": "904:15:6", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 1093, "mutability": "constant", "name": "NOT_ENTERED", "nameLocation": "1699:11:6", "nodeType": "VariableDeclaration", "scope": 1156, "src": "1674:40:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1674:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31", "id": 1092, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1713:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "visibility": "private"}, {"constant": true, "id": 1096, "mutability": "constant", "name": "ENTERED", "nameLocation": "1745:7:6", "nodeType": "VariableDeclaration", "scope": 1156, "src": "1720:36:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1094, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1720:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "32", "id": 1095, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1755:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "visibility": "private"}, {"constant": false, "id": 1098, "mutability": "mutable", "name": "_status", "nameLocation": "1779:7:6", "nodeType": "VariableDeclaration", "scope": 1156, "src": "1763:23:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1097, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1763:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"documentation": {"id": 1099, "nodeType": "StructuredDocumentation", "src": "1793:52:6", "text": " @dev Unauthorized reentrant call."}, "errorSelector": "3ee5aeb5", "id": 1101, "name": "ReentrancyGuardReentrantCall", "nameLocation": "1856:28:6", "nodeType": "ErrorDefinition", "parameters": {"id": 1100, "nodeType": "ParameterList", "parameters": [], "src": "1884:2:6"}, "src": "1850:37:6"}, {"body": {"id": 1108, "nodeType": "Block", "src": "1907:38:6", "statements": [{"expression": {"id": 1106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1104, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "1917:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1105, "name": "NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1093, "src": "1927:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1917:21:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1107, "nodeType": "ExpressionStatement", "src": "1917:21:6"}]}, "id": 1109, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 1102, "nodeType": "ParameterList", "parameters": [], "src": "1904:2:6"}, "returnParameters": {"id": 1103, "nodeType": "ParameterList", "parameters": [], "src": "1907:0:6"}, "scope": 1156, "src": "1893:52:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1119, "nodeType": "Block", "src": "2346:79:6", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1112, "name": "_nonReentrantBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1136, "src": "2356:19:6", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 1113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2356:21:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1114, "nodeType": "ExpressionStatement", "src": "2356:21:6"}, {"id": 1115, "nodeType": "PlaceholderStatement", "src": "2387:1:6"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1116, "name": "_nonReentrantAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1144, "src": "2398:18:6", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 1117, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2398:20:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1118, "nodeType": "ExpressionStatement", "src": "2398:20:6"}]}, "documentation": {"id": 1110, "nodeType": "StructuredDocumentation", "src": "1951:366:6", "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."}, "id": 1120, "name": "nonReentrant", "nameLocation": "2331:12:6", "nodeType": "ModifierDefinition", "parameters": {"id": 1111, "nodeType": "ParameterList", "parameters": [], "src": "2343:2:6"}, "src": "2322:103:6", "virtual": false, "visibility": "internal"}, {"body": {"id": 1135, "nodeType": "Block", "src": "2470:268:6", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1123, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "2558:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1124, "name": "ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "2569:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2558:18:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1130, "nodeType": "IfStatement", "src": "2554:86:6", "trueBody": {"id": 1129, "nodeType": "Block", "src": "2578:62:6", "statements": [{"errorCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 1126, "name": "ReentrancyGuardReentrantCall", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1101, "src": "2599:28:6", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2599:30:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1128, "nodeType": "RevertStatement", "src": "2592:37:6"}]}}, {"expression": {"id": 1133, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1131, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "2714:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1132, "name": "ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "2724:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2714:17:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1134, "nodeType": "ExpressionStatement", "src": "2714:17:6"}]}, "id": 1136, "implemented": true, "kind": "function", "modifiers": [], "name": "_nonReentrantBefore", "nameLocation": "2440:19:6", "nodeType": "FunctionDefinition", "parameters": {"id": 1121, "nodeType": "ParameterList", "parameters": [], "src": "2459:2:6"}, "returnParameters": {"id": 1122, "nodeType": "ParameterList", "parameters": [], "src": "2470:0:6"}, "scope": 1156, "src": "2431:307:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 1143, "nodeType": "Block", "src": "2782:170:6", "statements": [{"expression": {"id": 1141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1139, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "2924:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1140, "name": "NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1093, "src": "2934:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2924:21:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1142, "nodeType": "ExpressionStatement", "src": "2924:21:6"}]}, "id": 1144, "implemented": true, "kind": "function", "modifiers": [], "name": "_nonReentrantAfter", "nameLocation": "2753:18:6", "nodeType": "FunctionDefinition", "parameters": {"id": 1137, "nodeType": "ParameterList", "parameters": [], "src": "2771:2:6"}, "returnParameters": {"id": 1138, "nodeType": "ParameterList", "parameters": [], "src": "2782:0:6"}, "scope": 1156, "src": "2744:208:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 1154, "nodeType": "Block", "src": "3195:42:6", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1152, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1150, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1098, "src": "3212:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1151, "name": "ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "3223:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3212:18:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1149, "id": 1153, "nodeType": "Return", "src": "3205:25:6"}]}, "documentation": {"id": 1145, "nodeType": "StructuredDocumentation", "src": "2958:168:6", "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."}, "id": 1155, "implemented": true, "kind": "function", "modifiers": [], "name": "_reentrancyGuardEntered", "nameLocation": "3140:23:6", "nodeType": "FunctionDefinition", "parameters": {"id": 1146, "nodeType": "ParameterList", "parameters": [], "src": "3163:2:6"}, "returnParameters": {"id": 1149, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1148, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1155, "src": "3189:4:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1147, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3189:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3188:6:6"}, "scope": 1156, "src": "3131:106:6", "stateMutability": "view", "virtual": false, "visibility": "internal"}], "scope": 1157, "src": "886:2353:6", "usedErrors": [1101], "usedEvents": []}], "src": "109:3131:6"}}}, "sourceList": ["/home/wejdene/thesis/NFT-F/contracts/EchidnaMarketIntegrationTest.sol", "/home/wejdene/thesis/NFT-F/contracts/MarketIntegration.sol", "/home/wejdene/thesis/NFT-F/interfaces/IMarketIntegration.sol", "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/access/Ownable.sol", "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/Context.sol", "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol"], "contracts": {"/home/wejdene/thesis/NFT-F/contracts/EchidnaMarketIntegrationTest.sol:EchidnaMarketIntegrationTest": {"srcmap": "1623:1435:0:-:0;;;1763:338;;;;;;;;;;1796:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1787:6;;:24;;;;;;;;;;;;;;;;;;1830:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1821:6;;:24;;;;;;;;;;;;;;;;;;1894:6;;;;;;;;;;;1911;;;;;;;;;;;1864:55;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1855:6;;:64;;;;;;;;;;;;;;;;;;1929:6;;;;;;;;;;;:14;;;1952:6;;;;;;;;;;1961:14;1929:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1986:6;;;;;;;;;;;:14;;;2009:6;;;;;;;;;;2018:14;1986:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2043:6;;;;;;;;;;:19;;;2063:14;2079;2043:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1623:1435;;;;;;;;;;:::o;:::-;;;;;;;;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:332::-;486:4;524:2;513:9;509:18;501:26;;537:71;605:1;594:9;590:17;581:6;537:71;:::i;:::-;618:72;686:2;675:9;671:18;662:6;618:72;:::i;:::-;365:332;;;;;:::o;703:107::-;770:7;799:5;788:16;;703:107;;;:::o;816:77::-;853:7;882:5;871:16;;816:77;;;:::o;899:60::-;927:3;948:5;941:12;;899:60;;;:::o;965:202::-;1045:9;1078:83;1096:64;1105:54;1153:5;1105:54;:::i;:::-;1096:64;:::i;:::-;1078:83;:::i;:::-;1065:96;;965:202;;;:::o;1173:191::-;1290:67;1351:5;1290:67;:::i;:::-;1285:3;1278:80;1173:191;;:::o;1370:392::-;1521:4;1559:2;1548:9;1544:18;1536:26;;1572:71;1640:1;1629:9;1625:17;1616:6;1572:71;:::i;:::-;1653:102;1751:2;1740:9;1736:18;1727:6;1653:102;:::i;:::-;1370:392;;;;;:::o;1849:117::-;1958:1;1955;1948:12;2095:90;2129:7;2172:5;2165:13;2158:21;2147:32;;2095:90;;;:::o;2191:116::-;2261:21;2276:5;2261:21;:::i;:::-;2254:5;2251:32;2241:60;;2297:1;2294;2287:12;2241:60;2191:116;:::o;2313:137::-;2367:5;2398:6;2392:13;2383:22;;2414:30;2438:5;2414:30;:::i;:::-;2313:137;;;;:::o;2456:345::-;2523:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:119;;;2578:79;;:::i;:::-;2540:119;2698:1;2723:61;2776:7;2767:6;2756:9;2752:22;2723:61;:::i;:::-;2713:71;;2669:125;2456:345;;;;:::o;2807:107::-;2874:7;2903:5;2892:16;;2807:107;;;:::o;2920:202::-;3000:9;3033:83;3051:64;3060:54;3108:5;3060:54;:::i;:::-;3051:64;:::i;:::-;3033:83;:::i;:::-;3020:96;;2920:202;;;:::o;3128:191::-;3245:67;3306:5;3245:67;:::i;:::-;3240:3;3233:80;3128:191;;:::o;3325:452::-;3506:4;3544:2;3533:9;3529:18;3521:26;;3557:101;3655:1;3644:9;3640:17;3631:6;3557:101;:::i;:::-;3668:102;3766:2;3755:9;3751:18;3742:6;3668:102;:::i;:::-;3325:452;;;;;:::o;1623:1435:0:-;;;;;;;", "srcmap-runtime": "1623:1435:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2874:181;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1733:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1667:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2387:427;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2151:181;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1704:23;;;;;;;;;;;;;:::o;2874:181::-;2941:4;2988:16;2964:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;:84;;;;;3032:16;3008:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;2964:84;2957:91;;2874:181;:::o;1733:23::-;;;;;;;;;;;;;:::o;1667:31::-;;;;;;;;;;;;:::o;2387:427::-;2437:4;2601:6;;;;;;;;;;;:12;;;2622:6;;;;;;;;;;;2631:12;2645:14;2601:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:211;;2765:4;2758:11;;;;2597:211;2682:5;2675:12;;2387:427;;:::o;2151:181::-;2222:4;2269:14;2245:6;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;:80;;;;;2311:14;2287:6;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;2245:80;2238:87;;2151:181;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:143::-;552:9;585:37;616:5;585:37;:::i;:::-;572:50;;485:143;;;:::o;634:165::-;738:54;786:5;738:54;:::i;:::-;733:3;726:67;634:165;;:::o;805:256::-;915:4;953:2;942:9;938:18;930:26;;966:88;1051:1;1040:9;1036:17;1027:6;966:88;:::i;:::-;805:256;;;;:::o;1067:90::-;1101:7;1144:5;1137:13;1130:21;1119:32;;1067:90;;;:::o;1163:109::-;1244:21;1259:5;1244:21;:::i;:::-;1239:3;1232:34;1163:109;;:::o;1278:210::-;1365:4;1403:2;1392:9;1388:18;1380:26;;1416:65;1478:1;1467:9;1463:17;1454:6;1416:65;:::i;:::-;1278:210;;;;:::o;1494:151::-;1569:9;1602:37;1633:5;1602:37;:::i;:::-;1589:50;;1494:151;;;:::o;1651:181::-;1763:62;1819:5;1763:62;:::i;:::-;1758:3;1751:75;1651:181;;:::o;1838:272::-;1956:4;1994:2;1983:9;1979:18;1971:26;;2007:96;2100:1;2089:9;2085:17;2076:6;2007:96;:::i;:::-;1838:272;;;;:::o;2197:117::-;2306:1;2303;2296:12;2443:77;2480:7;2509:5;2498:16;;2443:77;;;:::o;2526:122::-;2599:24;2617:5;2599:24;:::i;:::-;2592:5;2589:35;2579:63;;2638:1;2635;2628:12;2579:63;2526:122;:::o;2654:143::-;2711:5;2742:6;2736:13;2727:22;;2758:33;2785:5;2758:33;:::i;:::-;2654:143;;;;:::o;2803:351::-;2873:6;2922:2;2910:9;2901:7;2897:23;2893:32;2890:119;;;2928:79;;:::i;:::-;2890:119;3048:1;3073:64;3129:7;3120:6;3109:9;3105:22;3073:64;:::i;:::-;3063:74;;3019:128;2803:351;;;;:::o;3160:96::-;3197:7;3226:24;3244:5;3226:24;:::i;:::-;3215:35;;3160:96;;;:::o;3262:118::-;3349:24;3367:5;3349:24;:::i;:::-;3344:3;3337:37;3262:118;;:::o;3386:105::-;3451:7;3480:5;3469:16;;3386:105;;;:::o;3497:198::-;3575:9;3608:81;3626:62;3635:52;3681:5;3635:52;:::i;:::-;3626:62;:::i;:::-;3608:81;:::i;:::-;3595:94;;3497:198;;;:::o;3701:187::-;3816:65;3875:5;3816:65;:::i;:::-;3811:3;3804:78;3701:187;;:::o;3894:107::-;3961:7;3990:5;3979:16;;3894:107;;;:::o;4007:202::-;4087:9;4120:83;4138:64;4147:54;4195:5;4147:54;:::i;:::-;4138:64;:::i;:::-;4120:83;:::i;:::-;4107:96;;4007:202;;;:::o;4215:191::-;4332:67;4393:5;4332:67;:::i;:::-;4327:3;4320:80;4215:191;;:::o;4412:558::-;4619:4;4657:2;4646:9;4642:18;4634:26;;4670:71;4738:1;4727:9;4723:17;4714:6;4670:71;:::i;:::-;4751:100;4847:2;4836:9;4832:18;4823:6;4751:100;:::i;:::-;4861:102;4959:2;4948:9;4944:18;4935:6;4861:102;:::i;:::-;4412:558;;;;;;:::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"echidna_test_bad_trade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_test_liquidity_cannot_decrease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_test_total_supply_constant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"contractMarketIntegration\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contractMockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contractMockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630fc63d10146100645780632701f349146100825780635f64b55b146100a057806380f55605146100be578063bd4d35ff146100dc578063d2fa1822146100fa575b5f80fd5b61006c610118565b604051610079919061054f565b60405180910390f35b61008a61013d565b6040516100979190610582565b60405180910390f35b6100a861027f565b6040516100b5919061054f565b60405180910390f35b6100c66102a4565b6040516100d391906105bb565b60405180910390f35b6100e46102c7565b6040516100f19190610582565b60405180910390f35b610102610395565b60405161010f9190610582565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f69d3c21bcecceda100000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d7919061060b565b14801561027a575069d3c21bcecceda100000060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610254573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610278919061060b565b145b905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b44b96e160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1668056bc75e2d6310000069021e19e0c9bab24000006040518463ffffffff1660e01b8152600401610359939291906106c8565b5f604051808303815f87803b158015610370575f80fd5b505af1925050508015610381575060015b61038e5760019050610392565b5f90505b90565b5f69021e19e0c9bab24000005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166374042d2c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610409573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042d919061060b565b101580156104d0575069021e19e0c9bab24000005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663edd78c946040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cd919061060b565b10155b905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61051761051261050d846104d5565b6104f4565b6104d5565b9050919050565b5f610528826104fd565b9050919050565b5f6105398261051e565b9050919050565b6105498161052f565b82525050565b5f6020820190506105625f830184610540565b92915050565b5f8115159050919050565b61057c81610568565b82525050565b5f6020820190506105955f830184610573565b92915050565b5f6105a58261051e565b9050919050565b6105b58161059b565b82525050565b5f6020820190506105ce5f8301846105ac565b92915050565b5f80fd5b5f819050919050565b6105ea816105d8565b81146105f4575f80fd5b50565b5f81519050610605816105e1565b92915050565b5f602082840312156106205761061f6105d4565b5b5f61062d848285016105f7565b91505092915050565b5f610640826104d5565b9050919050565b61065081610636565b82525050565b5f819050919050565b5f61067961067461066f84610656565b6104f4565b6105d8565b9050919050565b6106898161065f565b82525050565b5f819050919050565b5f6106b26106ad6106a88461068f565b6104f4565b6105d8565b9050919050565b6106c281610698565b82525050565b5f6060820190506106db5f830186610647565b6106e86020830185610680565b6106f560408301846106b9565b94935050505056fea2646970667358221220927ea23dd6fbccf0f609996b250a7f9e6d4a8646de5cadc63860bf18cfd5eb1764736f6c63430008140033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/contracts/EchidnaMarketIntegrationTest.sol:MockERC20": {"srcmap": "93:1527:0:-:0;;;238:33;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;277:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;335:2;311:26;;;;;;;;;;;;;;;;;;;;372:16;343:45;;395:66;;;;;;;;;;443:11;;419:9;:21;429:10;419:21;;;;;;;;;;;;;;;:35;;;;93:1527;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;93:1527:0:-;;;;;;;", "srcmap-runtime": "93:1527:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;343:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;993:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;118:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;168:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;238:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;786:201::-;852:4;901:6;868:9;:21;878:10;868:21;;;;;;;;;;;;;;;:30;890:7;868:30;;;;;;;;;;;;;;;:39;;;;943:7;922:37;;931:10;922:37;;;952:6;922:37;;;;;;:::i;:::-;;;;;;;;976:4;969:11;;786:201;;;;:::o;343:45::-;;;;:::o;993:464::-;1073:4;1128:6;1097:9;:15;1107:4;1097:15;;;;;;;;;;;;;;;:27;1113:10;1097:27;;;;;;;;;;;;;;;;:37;;1089:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1220:6;1201:9;:15;1211:4;1201:15;;;;;;;;;;;;;;;;:25;;1193:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1302:6;1283:9;:15;1293:4;1283:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1335:6;1318:9;:13;1328:2;1318:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1382:6;1351:9;:15;1361:4;1351:15;;;;;;;;;;;;;;;:27;1367:10;1351:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1418:2;1403:26;;1412:4;1403:26;;;1422:6;1403:26;;;;;;:::i;:::-;;;;;;;;1446:4;1439:11;;993:464;;;;;:::o;311:26::-;;;;;;;;;;;;;:::o;118:44::-;;;;;;;;;;;;;;;;;:::o;277:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;467:313::-;529:4;578:6;553:9;:21;563:10;553:21;;;;;;;;;;;;;;;;:31;;545:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:6;641:9;:21;651:10;641:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;699:6;682:9;:13;692:2;682:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;741:2;720:32;;729:10;720:32;;;745:6;720:32;;;;;;:::i;:::-;;;;;;;;769:4;762:11;;467:313;;;;:::o;168:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:231::-;6320:34;6316:1;6308:6;6304:14;6297:58;6389:14;6384:2;6376:6;6372:15;6365:39;6180:231;:::o;6417:366::-;6559:3;6580:67;6644:2;6639:3;6580:67;:::i;:::-;6573:74;;6656:93;6745:3;6656:93;:::i;:::-;6774:2;6769:3;6765:12;6758:19;;6417:366;;;:::o;6789:419::-;6955:4;6993:2;6982:9;6978:18;6970:26;;7042:9;7036:4;7032:20;7028:1;7017:9;7013:17;7006:47;7070:131;7196:4;7070:131;:::i;:::-;7062:139;;6789:419;;;:::o;7214:229::-;7354:34;7350:1;7342:6;7338:14;7331:58;7423:12;7418:2;7410:6;7406:15;7399:37;7214:229;:::o;7449:366::-;7591:3;7612:67;7676:2;7671:3;7612:67;:::i;:::-;7605:74;;7688:93;7777:3;7688:93;:::i;:::-;7806:2;7801:3;7797:12;7790:19;;7449:366;;;:::o;7821:419::-;7987:4;8025:2;8014:9;8010:18;8002:26;;8074:9;8068:4;8064:20;8060:1;8049:9;8045:17;8038:47;8102:131;8228:4;8102:131;:::i;:::-;8094:139;;7821:419;;;:::o;8246:180::-;8294:77;8291:1;8284:88;8391:4;8388:1;8381:15;8415:4;8412:1;8405:15;8432:194;8472:4;8492:20;8510:1;8492:20;:::i;:::-;8487:25;;8526:20;8544:1;8526:20;:::i;:::-;8521:25;;8570:1;8567;8563:9;8555:17;;8594:1;8588:4;8585:11;8582:37;;;8599:18;;:::i;:::-;8582:37;8432:194;;;;:::o;8632:191::-;8672:3;8691:20;8709:1;8691:20;:::i;:::-;8686:25;;8725:20;8743:1;8725:20;:::i;:::-;8720:25;;8768:1;8765;8761:9;8754:16;;8789:3;8786:1;8783:10;8780:36;;;8796:18;;:::i;:::-;8780:36;8632:191;;;;:::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "60806040526040518060400160405280600a81526020017f4d6f636b20546f6b656e00000000000000000000000000000000000000000000815250600290816200004a919062000375565b506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152506003908162000091919062000375565b50601260045f6101000a81548160ff021916908360ff16021790555069d3c21bcecceda1000000600555348015620000c7575f80fd5b506005545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555062000459565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200018d57607f821691505b602082108103620001a357620001a262000148565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001ca565b620002138683620001ca565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200025d6200025762000251846200022b565b62000234565b6200022b565b9050919050565b5f819050919050565b62000278836200023d565b62000290620002878262000264565b848454620001d6565b825550505050565b5f90565b620002a662000298565b620002b38184846200026d565b505050565b5b81811015620002da57620002ce5f826200029c565b600181019050620002b9565b5050565b601f8211156200032957620002f381620001a9565b620002fe84620001bb565b810160208510156200030e578190505b620003266200031d85620001bb565b830182620002b8565b50505b505050565b5f82821c905092915050565b5f6200034b5f19846008026200032e565b1980831691505092915050565b5f6200036583836200033a565b9150826002028217905092915050565b620003808262000111565b67ffffffffffffffff8111156200039c576200039b6200011b565b5b620003a8825462000175565b620003b5828285620002de565b5f60209050601f831160018114620003eb575f8415620003d6578287015190505b620003e2858262000358565b86555062000451565b601f198416620003fb86620001a9565b5f5b828110156200042457848901518255600182019150602085019450602081019050620003fd565b8683101562000444578489015162000440601f8916826200033a565b8355505b6001600288020188555050505b505050505050565b610dc180620004675f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610948565b60405180910390f35b6100cd60048036038101906100c891906109f9565b610289565b6040516100da9190610a51565b60405180910390f35b6100eb610376565b6040516100f89190610a79565b60405180910390f35b61011b60048036038101906101169190610a92565b61037c565b6040516101289190610a51565b60405180910390f35b610139610659565b6040516101469190610afd565b60405180910390f35b61016960048036038101906101649190610b16565b61066b565b6040516101769190610a79565b60405180910390f35b61018761067f565b6040516101949190610948565b60405180910390f35b6101b760048036038101906101b291906109f9565b61070b565b6040516101c49190610a51565b60405180910390f35b6101e760048036038101906101e29190610b41565b61089e565b6040516101f49190610a79565b60405180910390f35b6002805461020a90610bac565b80601f016020809104026020016040519081016040528092919081815260200182805461023690610bac565b80156102815780601f1061025857610100808354040283529160200191610281565b820191905f5260205f20905b81548152906001019060200180831161026457829003601f168201915b505050505081565b5f8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103649190610a79565b60405180910390a36001905092915050565b60055481565b5f8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610c4c565b60405180910390fd5b815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610cda565b60405180910390fd5b815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105029190610d25565b92505081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105549190610d58565b925050819055508160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105e29190610d25565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106469190610a79565b60405180910390a3600190509392505050565b60045f9054906101000a900460ff1681565b5f602052805f5260405f205f915090505481565b6003805461068c90610bac565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890610bac565b80156107035780601f106106da57610100808354040283529160200191610703565b820191905f5260205f20905b8154815290600101906020018083116106e657829003601f168201915b505050505081565b5f815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290610cda565b60405180910390fd5b815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107d69190610d25565b92505081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108289190610d58565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088c9190610a79565b60405180910390a36001905092915050565b6001602052815f5260405f20602052805f5260405f205f91509150505481565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156108f55780820151818401526020810190506108da565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61091a826108be565b61092481856108c8565b93506109348185602086016108d8565b61093d81610900565b840191505092915050565b5f6020820190508181035f8301526109608184610910565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109958261096c565b9050919050565b6109a58161098b565b81146109af575f80fd5b50565b5f813590506109c08161099c565b92915050565b5f819050919050565b6109d8816109c6565b81146109e2575f80fd5b50565b5f813590506109f3816109cf565b92915050565b5f8060408385031215610a0f57610a0e610968565b5b5f610a1c858286016109b2565b9250506020610a2d858286016109e5565b9150509250929050565b5f8115159050919050565b610a4b81610a37565b82525050565b5f602082019050610a645f830184610a42565b92915050565b610a73816109c6565b82525050565b5f602082019050610a8c5f830184610a6a565b92915050565b5f805f60608486031215610aa957610aa8610968565b5b5f610ab6868287016109b2565b9350506020610ac7868287016109b2565b9250506040610ad8868287016109e5565b9150509250925092565b5f60ff82169050919050565b610af781610ae2565b82525050565b5f602082019050610b105f830184610aee565b92915050565b5f60208284031215610b2b57610b2a610968565b5b5f610b38848285016109b2565b91505092915050565b5f8060408385031215610b5757610b56610968565b5b5f610b64858286016109b2565b9250506020610b75858286016109b2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610bc357607f821691505b602082108103610bd657610bd5610b7f565b5b50919050565b7f4d6f636b45524332303a207472616e7366657220616d6f756e742065786365655f8201527f647320616c6c6f77616e63650000000000000000000000000000000000000000602082015250565b5f610c36602c836108c8565b9150610c4182610bdc565b604082019050919050565b5f6020820190508181035f830152610c6381610c2a565b9050919050565b7f4d6f636b45524332303a207472616e7366657220616d6f756e742065786365655f8201527f64732062616c616e636500000000000000000000000000000000000000000000602082015250565b5f610cc4602a836108c8565b9150610ccf82610c6a565b604082019050919050565b5f6020820190508181035f830152610cf181610cb8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d2f826109c6565b9150610d3a836109c6565b9250828203905081811115610d5257610d51610cf8565b5b92915050565b5f610d62826109c6565b9150610d6d836109c6565b9250828201905080821115610d8557610d84610cf8565b5b9291505056fea26469706673582212204a9d8a3d2276df02d74415ee36068ffcdc0e64f51776ac22cd7367fd815c73d864736f6c63430008140033", "bin-runtime": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610948565b60405180910390f35b6100cd60048036038101906100c891906109f9565b610289565b6040516100da9190610a51565b60405180910390f35b6100eb610376565b6040516100f89190610a79565b60405180910390f35b61011b60048036038101906101169190610a92565b61037c565b6040516101289190610a51565b60405180910390f35b610139610659565b6040516101469190610afd565b60405180910390f35b61016960048036038101906101649190610b16565b61066b565b6040516101769190610a79565b60405180910390f35b61018761067f565b6040516101949190610948565b60405180910390f35b6101b760048036038101906101b291906109f9565b61070b565b6040516101c49190610a51565b60405180910390f35b6101e760048036038101906101e29190610b41565b61089e565b6040516101f49190610a79565b60405180910390f35b6002805461020a90610bac565b80601f016020809104026020016040519081016040528092919081815260200182805461023690610bac565b80156102815780601f1061025857610100808354040283529160200191610281565b820191905f5260205f20905b81548152906001019060200180831161026457829003601f168201915b505050505081565b5f8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103649190610a79565b60405180910390a36001905092915050565b60055481565b5f8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610c4c565b60405180910390fd5b815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610cda565b60405180910390fd5b815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105029190610d25565b92505081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105549190610d58565b925050819055508160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105e29190610d25565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106469190610a79565b60405180910390a3600190509392505050565b60045f9054906101000a900460ff1681565b5f602052805f5260405f205f915090505481565b6003805461068c90610bac565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890610bac565b80156107035780601f106106da57610100808354040283529160200191610703565b820191905f5260205f20905b8154815290600101906020018083116106e657829003601f168201915b505050505081565b5f815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078290610cda565b60405180910390fd5b815f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107d69190610d25565b92505081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108289190610d58565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088c9190610a79565b60405180910390a36001905092915050565b6001602052815f5260405f20602052805f5260405f205f91509150505481565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156108f55780820151818401526020810190506108da565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61091a826108be565b61092481856108c8565b93506109348185602086016108d8565b61093d81610900565b840191505092915050565b5f6020820190508181035f8301526109608184610910565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109958261096c565b9050919050565b6109a58161098b565b81146109af575f80fd5b50565b5f813590506109c08161099c565b92915050565b5f819050919050565b6109d8816109c6565b81146109e2575f80fd5b50565b5f813590506109f3816109cf565b92915050565b5f8060408385031215610a0f57610a0e610968565b5b5f610a1c858286016109b2565b9250506020610a2d858286016109e5565b9150509250929050565b5f8115159050919050565b610a4b81610a37565b82525050565b5f602082019050610a645f830184610a42565b92915050565b610a73816109c6565b82525050565b5f602082019050610a8c5f830184610a6a565b92915050565b5f805f60608486031215610aa957610aa8610968565b5b5f610ab6868287016109b2565b9350506020610ac7868287016109b2565b9250506040610ad8868287016109e5565b9150509250925092565b5f60ff82169050919050565b610af781610ae2565b82525050565b5f602082019050610b105f830184610aee565b92915050565b5f60208284031215610b2b57610b2a610968565b5b5f610b38848285016109b2565b91505092915050565b5f8060408385031215610b5757610b56610968565b5b5f610b64858286016109b2565b9250506020610b75858286016109b2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610bc357607f821691505b602082108103610bd657610bd5610b7f565b5b50919050565b7f4d6f636b45524332303a207472616e7366657220616d6f756e742065786365655f8201527f647320616c6c6f77616e63650000000000000000000000000000000000000000602082015250565b5f610c36602c836108c8565b9150610c4182610bdc565b604082019050919050565b5f6020820190508181035f830152610c6381610c2a565b9050919050565b7f4d6f636b45524332303a207472616e7366657220616d6f756e742065786365655f8201527f64732062616c616e636500000000000000000000000000000000000000000000602082015250565b5f610cc4602a836108c8565b9150610ccf82610c6a565b604082019050919050565b5f6020820190508181035f830152610cf181610cb8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d2f826109c6565b9150610d3a836109c6565b9250828203905081811115610d5257610d51610cf8565b5b92915050565b5f610d62826109c6565b9150610d6d836109c6565b9250828201905080821115610d8557610d84610cf8565b5b9291505056fea26469706673582212204a9d8a3d2276df02d74415ee36068ffcdc0e64f51776ac22cd7367fd815c73d864736f6c63430008140033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/contracts/MarketIntegration.sol:MarketIntegration": {"srcmap": "553:5296:1:-:0;;;1013:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1068:10;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:6;1917:7;:21;;;;1117:1:1::1;1098:21;;:7;:21;;;;:46;;;;;1142:1;1123:21;;:7;:21;;;;1098:46;1090:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1206:7;1190:6;;:24;;;;;;;;;;;;;;;;;;1240:7;1224:6;;:24;;;;;;;;;;;;;;;;;;1013:242:::0;;553:5296;;2912:187:3;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:181::-;2025:33;2021:1;2013:6;2009:14;2002:57;1885:181;:::o;2072:366::-;2214:3;2235:67;2299:2;2294:3;2235:67;:::i;:::-;2228:74;;2311:93;2400:3;2311:93;:::i;:::-;2429:2;2424:3;2420:12;2413:19;;2072:366;;;:::o;2444:419::-;2610:4;2648:2;2637:9;2633:18;2625:26;;2697:9;2691:4;2687:20;2683:1;2672:9;2668:17;2661:47;2725:131;2851:4;2725:131;:::i;:::-;2717:139;;2444:419;;;:::o;553:5296:1:-;;;;;;;", "srcmap-runtime": "553:5296:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;692;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;:::i;:::-;;5560:87:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1461:506:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3020:930;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4231:719;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5758:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;666:20:1;;;;;;;;;;;;;:::o;692:::-;;;;;;;;;;;;;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5560:87:1:-;5606:7;5632:8;;5625:15;;5560:87;:::o;1638:85:3:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1461:506:1:-;2356:21:6;:19;:21::i;:::-;1571:12:1::1;1559:8;;:24;;;;;;;:::i;:::-;;;;;;;;1611:6;;;;;;;;;;;:19;;;1631:10;1651:4;1658:12;1611:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;1750:6;;;;;;;;;;;:19;;;1770:10;1790:4;1797:12;1750:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1729:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;1879:12;1867:8;;:24;;;;;;;:::i;:::-;;;;;;;;1921:10;1906:54;;;1933:12;1947;1906:54;;;;;;;:::i;:::-;;;;;;;;2398:20:6::0;:18;:20::i;:::-;1461:506:1;;:::o;2184:525::-;2356:21:6;:19;:21::i;:::-;2297:12:1::1;2285:8;;:24;;;;;;;:::i;:::-;;;;;;;;2331:12;2319:8;;:24;;;;;;;:::i;:::-;;;;;;;;2377:8;;2361:12;:24;;:52;;;;;2405:8;;2389:12;:24;;2361:52;2353:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2467:6;;;;;;;;;;;:15;;;2483:10;2495:12;2467:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2450:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2562:6;;;;;;;;;;;:15;;;2578:10;2590:12;2562:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2545:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2663:10;2646:56;;;2675:12;2689;2646:56;;;;;;;:::i;:::-;;;;;;;;2398:20:6::0;:18;:20::i;:::-;2184:525:1;;:::o;3020:930::-;2356:21:6;:19;:21::i;:::-;3151:6:1::1;;;;;;;;;;;3132:26;;:7;:26;;;:56;;;;3181:6;;;;;;;;;;;3162:26;;:7;:26;;;3132:56;3124:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3244:1;3233:8;:12;:32;;;;;3264:1;3249:12;:16;3233:32;3225:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3305:17;3332:7;3305:35;;3350:18;3391:6;;;;;;;;;;;3372:26;;:7;:26;;;3371:46;;3411:6;;;;;;;;;;;3371:46;;;3402:6;;;;;;;;;;;3371:46;3350:67;;3427:17;3447:31;3460:7;3469:8;3447:12;:31::i;:::-;3427:51;;3510:12;3497:9;:25;;3489:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3555:44;3570:7;3579:8;3589:9;3555:14;:44::i;:::-;3631:10;:23;;;3655:10;3675:4;3682:8;3631:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3610:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;3775:11;:20;;;3796:10;3808:9;3775:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3754:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3914:7;3888:55;;3902:10;3888:55;;;3923:8;3933:9;3888:55;;;;;;;:::i;:::-;;;;;;;;3114:836;;;2398:20:6::0;:18;:20::i;:::-;3020:930:1;;;:::o;4231:719::-;4309:7;4347:1;4336:8;:12;4328:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4417:6;;;;;;;;;;;4398:26;;:7;:26;;;:56;;;;4447:6;;;;;;;;;;;4428:26;;:7;:26;;;4398:56;4390:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;4492:20;4534:6;;;;;;;;;;;4515:26;;:7;:26;;;:48;;4555:8;;4515:48;;;4544:8;;4515:48;4492:71;;4573:21;4616:6;;;;;;;;;;;4597:26;;:7;:26;;;:48;;4637:8;;4597:48;;;4626:8;;4597:48;4573:72;;4702:11;4716:4;4702:18;;4730:23;4767:3;4756:8;:14;;;;:::i;:::-;4730:40;;4780:17;4818:13;4800:15;:31;;;;:::i;:::-;4780:51;;4841:19;4888:15;4879:5;4864:12;:20;;;;:::i;:::-;4863:40;;;;:::i;:::-;4841:62;;4932:11;4920:9;:23;;;;:::i;:::-;4913:30;;;;;;;;4231:719;;;;:::o;5758:87::-;5804:7;5830:8;;5823:15;;5758:87;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2431:307:6:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;2744:208::-;1713:1;2924:7;:21;;;;2744:208::o;5199:251:1:-;5313:6;;;;;;;;;;;5294:26;;:7;:26;;;5291:153;;5340:8;5328;;:20;;;;;;;:::i;:::-;;;;;;;;5366:9;5354:8;;:21;;;;;;;:::i;:::-;;;;;;;;5291:153;;;5406:8;5394;;:20;;;;;;;:::i;:::-;;;;;;;;5432:9;5420:8;;:21;;;;;;;:::i;:::-;;;;;;;;5291:153;5199:251;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:141::-;550:9;583:37;614:5;583:37;:::i;:::-;570:50;;485:141;;;:::o;632:161::-;734:52;780:5;734:52;:::i;:::-;729:3;722:65;632:161;;:::o;799:252::-;907:4;945:2;934:9;930:18;922:26;;958:86;1041:1;1030:9;1026:17;1017:6;958:86;:::i;:::-;799:252;;;;:::o;1057:77::-;1094:7;1123:5;1112:16;;1057:77;;;:::o;1140:118::-;1227:24;1245:5;1227:24;:::i;:::-;1222:3;1215:37;1140:118;;:::o;1264:222::-;1357:4;1395:2;1384:9;1380:18;1372:26;;1408:71;1476:1;1465:9;1461:17;1452:6;1408:71;:::i;:::-;1264:222;;;;:::o;1492:96::-;1529:7;1558:24;1576:5;1558:24;:::i;:::-;1547:35;;1492:96;;;:::o;1594:118::-;1681:24;1699:5;1681:24;:::i;:::-;1676:3;1669:37;1594:118;;:::o;1718:222::-;1811:4;1849:2;1838:9;1834:18;1826:26;;1862:71;1930:1;1919:9;1915:17;1906:6;1862:71;:::i;:::-;1718:222;;;;:::o;2027:117::-;2136:1;2133;2126:12;2273:122;2346:24;2364:5;2346:24;:::i;:::-;2339:5;2336:35;2326:63;;2385:1;2382;2375:12;2326:63;2273:122;:::o;2401:139::-;2447:5;2485:6;2472:20;2463:29;;2501:33;2528:5;2501:33;:::i;:::-;2401:139;;;;:::o;2546:474::-;2614:6;2622;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2797:1;2822:53;2867:7;2858:6;2847:9;2843:22;2822:53;:::i;:::-;2812:63;;2768:117;2924:2;2950:53;2995:7;2986:6;2975:9;2971:22;2950:53;:::i;:::-;2940:63;;2895:118;2546:474;;;;;:::o;3026:122::-;3099:24;3117:5;3099:24;:::i;:::-;3092:5;3089:35;3079:63;;3138:1;3135;3128:12;3079:63;3026:122;:::o;3154:139::-;3200:5;3238:6;3225:20;3216:29;;3254:33;3281:5;3254:33;:::i;:::-;3154:139;;;;:::o;3299:619::-;3376:6;3384;3392;3441:2;3429:9;3420:7;3416:23;3412:32;3409:119;;;3447:79;;:::i;:::-;3409:119;3567:1;3592:53;3637:7;3628:6;3617:9;3613:22;3592:53;:::i;:::-;3582:63;;3538:117;3694:2;3720:53;3765:7;3756:6;3745:9;3741:22;3720:53;:::i;:::-;3710:63;;3665:118;3822:2;3848:53;3893:7;3884:6;3873:9;3869:22;3848:53;:::i;:::-;3838:63;;3793:118;3299:619;;;;;:::o;3924:474::-;3992:6;4000;4049:2;4037:9;4028:7;4024:23;4020:32;4017:119;;;4055:79;;:::i;:::-;4017:119;4175:1;4200:53;4245:7;4236:6;4225:9;4221:22;4200:53;:::i;:::-;4190:63;;4146:117;4302:2;4328:53;4373:7;4364:6;4353:9;4349:22;4328:53;:::i;:::-;4318:63;;4273:118;3924:474;;;;;:::o;4404:329::-;4463:6;4512:2;4500:9;4491:7;4487:23;4483:32;4480:119;;;4518:79;;:::i;:::-;4480:119;4638:1;4663:53;4708:7;4699:6;4688:9;4684:22;4663:53;:::i;:::-;4653:63;;4609:117;4404:329;;;;:::o;4739:180::-;4787:77;4784:1;4777:88;4884:4;4881:1;4874:15;4908:4;4905:1;4898:15;4925:191;4965:3;4984:20;5002:1;4984:20;:::i;:::-;4979:25;;5018:20;5036:1;5018:20;:::i;:::-;5013:25;;5061:1;5058;5054:9;5047:16;;5082:3;5079:1;5076:10;5073:36;;;5089:18;;:::i;:::-;5073:36;4925:191;;;;:::o;5122:442::-;5271:4;5309:2;5298:9;5294:18;5286:26;;5322:71;5390:1;5379:9;5375:17;5366:6;5322:71;:::i;:::-;5403:72;5471:2;5460:9;5456:18;5447:6;5403:72;:::i;:::-;5485;5553:2;5542:9;5538:18;5529:6;5485:72;:::i;:::-;5122:442;;;;;;:::o;5570:90::-;5604:7;5647:5;5640:13;5633:21;5622:32;;5570:90;;;:::o;5666:116::-;5736:21;5751:5;5736:21;:::i;:::-;5729:5;5726:32;5716:60;;5772:1;5769;5762:12;5716:60;5666:116;:::o;5788:137::-;5842:5;5873:6;5867:13;5858:22;;5889:30;5913:5;5889:30;:::i;:::-;5788:137;;;;:::o;5931:345::-;5998:6;6047:2;6035:9;6026:7;6022:23;6018:32;6015:119;;;6053:79;;:::i;:::-;6015:119;6173:1;6198:61;6251:7;6242:6;6231:9;6227:22;6198:61;:::i;:::-;6188:71;;6144:125;5931:345;;;;:::o;6282:169::-;6366:11;6400:6;6395:3;6388:19;6440:4;6435:3;6431:14;6416:29;;6282:169;;;;:::o;6457:172::-;6597:24;6593:1;6585:6;6581:14;6574:48;6457:172;:::o;6635:366::-;6777:3;6798:67;6862:2;6857:3;6798:67;:::i;:::-;6791:74;;6874:93;6963:3;6874:93;:::i;:::-;6992:2;6987:3;6983:12;6976:19;;6635:366;;;:::o;7007:419::-;7173:4;7211:2;7200:9;7196:18;7188:26;;7260:9;7254:4;7250:20;7246:1;7235:9;7231:17;7224:47;7288:131;7414:4;7288:131;:::i;:::-;7280:139;;7007:419;;;:::o;7432:172::-;7572:24;7568:1;7560:6;7556:14;7549:48;7432:172;:::o;7610:366::-;7752:3;7773:67;7837:2;7832:3;7773:67;:::i;:::-;7766:74;;7849:93;7938:3;7849:93;:::i;:::-;7967:2;7962:3;7958:12;7951:19;;7610:366;;;:::o;7982:419::-;8148:4;8186:2;8175:9;8171:18;8163:26;;8235:9;8229:4;8225:20;8221:1;8210:9;8206:17;8199:47;8263:131;8389:4;8263:131;:::i;:::-;8255:139;;7982:419;;;:::o;8407:332::-;8528:4;8566:2;8555:9;8551:18;8543:26;;8579:71;8647:1;8636:9;8632:17;8623:6;8579:71;:::i;:::-;8660:72;8728:2;8717:9;8713:18;8704:6;8660:72;:::i;:::-;8407:332;;;;;:::o;8745:194::-;8785:4;8805:20;8823:1;8805:20;:::i;:::-;8800:25;;8839:20;8857:1;8839:20;:::i;:::-;8834:25;;8883:1;8880;8876:9;8868:17;;8907:1;8901:4;8898:11;8895:37;;;8912:18;;:::i;:::-;8895:37;8745:194;;;;:::o;8945:172::-;9085:24;9081:1;9073:6;9069:14;9062:48;8945:172;:::o;9123:366::-;9265:3;9286:67;9350:2;9345:3;9286:67;:::i;:::-;9279:74;;9362:93;9451:3;9362:93;:::i;:::-;9480:2;9475:3;9471:12;9464:19;;9123:366;;;:::o;9495:419::-;9661:4;9699:2;9688:9;9684:18;9676:26;;9748:9;9742:4;9738:20;9734:1;9723:9;9719:17;9712:47;9776:131;9902:4;9776:131;:::i;:::-;9768:139;;9495:419;;;:::o;9920:332::-;10041:4;10079:2;10068:9;10064:18;10056:26;;10092:71;10160:1;10149:9;10145:17;10136:6;10092:71;:::i;:::-;10173:72;10241:2;10230:9;10226:18;10217:6;10173:72;:::i;:::-;9920:332;;;;;:::o;10258:172::-;10398:24;10394:1;10386:6;10382:14;10375:48;10258:172;:::o;10436:366::-;10578:3;10599:67;10663:2;10658:3;10599:67;:::i;:::-;10592:74;;10675:93;10764:3;10675:93;:::i;:::-;10793:2;10788:3;10784:12;10777:19;;10436:366;;;:::o;10808:419::-;10974:4;11012:2;11001:9;10997:18;10989:26;;11061:9;11055:4;11051:20;11047:1;11036:9;11032:17;11025:47;11089:131;11215:4;11089:131;:::i;:::-;11081:139;;10808:419;;;:::o;11233:174::-;11373:26;11369:1;11361:6;11357:14;11350:50;11233:174;:::o;11413:366::-;11555:3;11576:67;11640:2;11635:3;11576:67;:::i;:::-;11569:74;;11652:93;11741:3;11652:93;:::i;:::-;11770:2;11765:3;11761:12;11754:19;;11413:366;;;:::o;11785:419::-;11951:4;11989:2;11978:9;11974:18;11966:26;;12038:9;12032:4;12028:20;12024:1;12013:9;12009:17;12002:47;12066:131;12192:4;12066:131;:::i;:::-;12058:139;;11785:419;;;:::o;12210:168::-;12350:20;12346:1;12338:6;12334:14;12327:44;12210:168;:::o;12384:366::-;12526:3;12547:67;12611:2;12606:3;12547:67;:::i;:::-;12540:74;;12623:93;12712:3;12623:93;:::i;:::-;12741:2;12736:3;12732:12;12725:19;;12384:366;;;:::o;12756:419::-;12922:4;12960:2;12949:9;12945:18;12937:26;;13009:9;13003:4;12999:20;12995:1;12984:9;12980:17;12973:47;13037:131;13163:4;13037:131;:::i;:::-;13029:139;;12756:419;;;:::o;13181:177::-;13321:29;13317:1;13309:6;13305:14;13298:53;13181:177;:::o;13364:366::-;13506:3;13527:67;13591:2;13586:3;13527:67;:::i;:::-;13520:74;;13603:93;13692:3;13603:93;:::i;:::-;13721:2;13716:3;13712:12;13705:19;;13364:366;;;:::o;13736:419::-;13902:4;13940:2;13929:9;13925:18;13917:26;;13989:9;13983:4;13979:20;13975:1;13964:9;13960:17;13953:47;14017:131;14143:4;14017:131;:::i;:::-;14009:139;;13736:419;;;:::o;14161:178::-;14301:30;14297:1;14289:6;14285:14;14278:54;14161:178;:::o;14345:366::-;14487:3;14508:67;14572:2;14567:3;14508:67;:::i;:::-;14501:74;;14584:93;14673:3;14584:93;:::i;:::-;14702:2;14697:3;14693:12;14686:19;;14345:366;;;:::o;14717:419::-;14883:4;14921:2;14910:9;14906:18;14898:26;;14970:9;14964:4;14960:20;14956:1;14945:9;14941:17;14934:47;14998:131;15124:4;14998:131;:::i;:::-;14990:139;;14717:419;;;:::o;15142:177::-;15282:29;15278:1;15270:6;15266:14;15259:53;15142:177;:::o;15325:366::-;15467:3;15488:67;15552:2;15547:3;15488:67;:::i;:::-;15481:74;;15564:93;15653:3;15564:93;:::i;:::-;15682:2;15677:3;15673:12;15666:19;;15325:366;;;:::o;15697:419::-;15863:4;15901:2;15890:9;15886:18;15878:26;;15950:9;15944:4;15940:20;15936:1;15925:9;15921:17;15914:47;15978:131;16104:4;15978:131;:::i;:::-;15970:139;;15697:419;;;:::o;16122:410::-;16162:7;16185:20;16203:1;16185:20;:::i;:::-;16180:25;;16219:20;16237:1;16219:20;:::i;:::-;16214:25;;16274:1;16271;16267:9;16296:30;16314:11;16296:30;:::i;:::-;16285:41;;16475:1;16466:7;16462:15;16459:1;16456:22;16436:1;16429:9;16409:83;16386:139;;16505:18;;:::i;:::-;16386:139;16170:362;16122:410;;;;:::o;16538:180::-;16586:77;16583:1;16576:88;16683:4;16680:1;16673:15;16707:4;16704:1;16697:15;16724:185;16764:1;16781:20;16799:1;16781:20;:::i;:::-;16776:25;;16815:20;16833:1;16815:20;:::i;:::-;16810:25;;16854:1;16844:35;;16859:18;;:::i;:::-;16844:35;16901:1;16898;16894:9;16889:14;;16724:185;;;;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "608060405234801562000010575f80fd5b5060405162001d2538038062001d2583398181016040528101906200003691906200031c565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a1919062000372565b60405180910390fd5b620000bb81620001f660201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200012c57505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6200016e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016590620003eb565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200040b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002e682620002bb565b9050919050565b620002f881620002da565b811462000303575f80fd5b50565b5f815190506200031681620002ed565b92915050565b5f8060408385031215620003355762000334620002b7565b5b5f620003448582860162000306565b9250506020620003578582860162000306565b9150509250929050565b6200036c81620002da565b82525050565b5f602082019050620003875f83018462000361565b92915050565b5f82825260208201905092915050565b7f546f6b656e206164647265737365732063616e6e6f74206265207a65726f2e005f82015250565b5f620003d3601f836200038d565b9150620003e0826200039d565b602082019050919050565b5f6020820190508181035f8301526200040481620003c5565b9050919050565b61190c80620004195f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80639cd441da1161006f5780639cd441da1461012d5780639d7de6b314610149578063b44b96e114610165578063ca706bcf14610181578063edd78c94146101b1578063f2fde38b146101cf576100a7565b80630fc63d10146100ab5780635f64b55b146100c9578063715018a6146100e757806374042d2c146100f15780638da5cb5b1461010f575b5f80fd5b6100b36101eb565b6040516100c09190611138565b60405180910390f35b6100d1610210565b6040516100de9190611138565b60405180910390f35b6100ef610235565b005b6100f9610248565b6040516101069190611169565b60405180910390f35b610117610251565b60405161012491906111a2565b60405180910390f35b610147600480360381019061014291906111e9565b610278565b005b610163600480360381019061015e91906111e9565b6104c6565b005b61017f600480360381019061017a9190611251565b610763565b005b61019b600480360381019061019691906112a1565b610b8b565b6040516101a89190611169565b60405180910390f35b6101b9610dd4565b6040516101c69190611169565b60405180910390f35b6101e960048036038101906101e491906112df565b610ddd565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61023d610e61565b6102465f610ee8565b565b5f600454905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610280610fa9565b8060055f8282546102919190611337565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016102f69392919061136a565b6020604051808303815f875af1158015610312573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033691906113d4565b610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90611459565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103d39392919061136a565b6020604051808303815f875af11580156103ef573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041391906113d4565b610452576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610449906114c1565b60405180910390fd5b8160045f8282546104639190611337565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4583836040516104b29291906114df565b60405180910390a26104c2610fef565b5050565b6104ce610fa9565b8160045f8282546104df9190611506565b925050819055508060055f8282546104f79190611506565b92505081905550600454821115801561051257506005548111155b610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611583565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105ad9291906115a1565b6020604051808303815f875af11580156105c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ed91906113d4565b61062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611459565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106889291906115a1565b6020604051808303815f875af11580156106a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c891906113d4565b610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe906114c1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059838360405161074f9291906114df565b60405180910390a261075f610fef565b5050565b61076b610fa9565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610812575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890611612565b60405180910390fd5b5f8211801561085f57505f81115b61089e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108959061167a565b60405180910390fd5b5f8390505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461091e5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610941565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90505f61094e8686610b8b565b905083811015610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a906116e2565b60405180910390fd5b61099e868683610ff8565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016109db9392919061136a565b6020604051808303815f875af11580156109f7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a1b91906113d4565b610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a519061174a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a959291906115a1565b6020604051808303815f875af1158015610ab1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad591906113d4565b610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b906117b2565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f54424bcd37c121359634358c4b6124e821af711811c1ad2fb8f96b94b046338c8784604051610b739291906114df565b60405180910390a3505050610b86610fef565b505050565b5f808211610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc59061181a565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610c75575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab90611612565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610d1157600554610d15565b6004545b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d7457600454610d78565b6005545b90505f6126f790505f8186610d8d9190611838565b90505f8382610d9c9190611838565b90505f8261271087610dae9190611838565b610db89190611337565b90508082610dc691906118a6565b965050505050505092915050565b5f600554905090565b610de5610e61565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e55575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4c91906111a2565b60405180910390fd5b610e5e81610ee8565b50565b610e696110b7565b73ffffffffffffffffffffffffffffffffffffffff16610e87610251565b73ffffffffffffffffffffffffffffffffffffffff1614610ee657610eaa6110b7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610edd91906111a2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610fe5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611081578160045f82825461105d9190611337565b925050819055508060055f8282546110759190611506565b925050819055506110b2565b8160055f8282546110929190611337565b925050819055508060045f8282546110aa9190611506565b925050819055505b505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6111006110fb6110f6846110be565b6110dd565b6110be565b9050919050565b5f611111826110e6565b9050919050565b5f61112282611107565b9050919050565b61113281611118565b82525050565b5f60208201905061114b5f830184611129565b92915050565b5f819050919050565b61116381611151565b82525050565b5f60208201905061117c5f83018461115a565b92915050565b5f61118c826110be565b9050919050565b61119c81611182565b82525050565b5f6020820190506111b55f830184611193565b92915050565b5f80fd5b6111c881611151565b81146111d2575f80fd5b50565b5f813590506111e3816111bf565b92915050565b5f80604083850312156111ff576111fe6111bb565b5b5f61120c858286016111d5565b925050602061121d858286016111d5565b9150509250929050565b61123081611182565b811461123a575f80fd5b50565b5f8135905061124b81611227565b92915050565b5f805f60608486031215611268576112676111bb565b5b5f6112758682870161123d565b9350506020611286868287016111d5565b9250506040611297868287016111d5565b9150509250925092565b5f80604083850312156112b7576112b66111bb565b5b5f6112c48582860161123d565b92505060206112d5858286016111d5565b9150509250929050565b5f602082840312156112f4576112f36111bb565b5b5f6113018482850161123d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134182611151565b915061134c83611151565b92508282019050808211156113645761136361130a565b5b92915050565b5f60608201905061137d5f830186611193565b61138a6020830185611193565b611397604083018461115a565b949350505050565b5f8115159050919050565b6113b38161139f565b81146113bd575f80fd5b50565b5f815190506113ce816113aa565b92915050565b5f602082840312156113e9576113e86111bb565b5b5f6113f6848285016113c0565b91505092915050565b5f82825260208201905092915050565b7f546f6b656e41207472616e73666572206661696c6564000000000000000000005f82015250565b5f6114436016836113ff565b915061144e8261140f565b602082019050919050565b5f6020820190508181035f83015261147081611437565b9050919050565b7f546f6b656e42207472616e73666572206661696c6564000000000000000000005f82015250565b5f6114ab6016836113ff565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b5f6040820190506114f25f83018561115a565b6114ff602083018461115a565b9392505050565b5f61151082611151565b915061151b83611151565b92508282039050818111156115335761153261130a565b5b92915050565b7f496e73756666696369656e742072657365727665732e000000000000000000005f82015250565b5f61156d6016836113ff565b915061157882611539565b602082019050919050565b5f6020820190508181035f83015261159a81611561565b9050919050565b5f6040820190506115b45f830185611193565b6115c1602083018461115a565b9392505050565b7f496e76616c696420746f6b656e20616464726573732e000000000000000000005f82015250565b5f6115fc6016836113ff565b9150611607826115c8565b602082019050919050565b5f6020820190508181035f830152611629816115f0565b9050919050565b7f496e76616c69642074726164696e6720616d6f756e74732e00000000000000005f82015250565b5f6116646018836113ff565b915061166f82611630565b602082019050919050565b5f6020820190508181035f83015261169181611658565b9050919050565b7f536c6970706167652065786365656465642e00000000000000000000000000005f82015250565b5f6116cc6012836113ff565b91506116d782611698565b602082019050919050565b5f6020820190508181035f8301526116f9816116c0565b9050919050565b7f496e70757420746f6b656e207472616e73666572206661696c656400000000005f82015250565b5f611734601b836113ff565b915061173f82611700565b602082019050919050565b5f6020820190508181035f83015261176181611728565b9050919050565b7f4f757470757420746f6b656e207472616e73666572206661696c6564000000005f82015250565b5f61179c601c836113ff565b91506117a782611768565b602082019050919050565b5f6020820190508181035f8301526117c981611790565b9050919050565b7f416d6f756e7420696e206d75737420626520706f7369746976652e00000000005f82015250565b5f611804601b836113ff565b915061180f826117d0565b602082019050919050565b5f6020820190508181035f830152611831816117f8565b9050919050565b5f61184282611151565b915061184d83611151565b925082820261185b81611151565b915082820484148315176118725761187161130a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118b082611151565b91506118bb83611151565b9250826118cb576118ca611879565b5b82820490509291505056fea26469706673582212209102d37472336a81b64b15401f905b1649e0e70b94bd2c3da1df8d371a2c1c4364736f6c63430008140033", "bin-runtime": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80639cd441da1161006f5780639cd441da1461012d5780639d7de6b314610149578063b44b96e114610165578063ca706bcf14610181578063edd78c94146101b1578063f2fde38b146101cf576100a7565b80630fc63d10146100ab5780635f64b55b146100c9578063715018a6146100e757806374042d2c146100f15780638da5cb5b1461010f575b5f80fd5b6100b36101eb565b6040516100c09190611138565b60405180910390f35b6100d1610210565b6040516100de9190611138565b60405180910390f35b6100ef610235565b005b6100f9610248565b6040516101069190611169565b60405180910390f35b610117610251565b60405161012491906111a2565b60405180910390f35b610147600480360381019061014291906111e9565b610278565b005b610163600480360381019061015e91906111e9565b6104c6565b005b61017f600480360381019061017a9190611251565b610763565b005b61019b600480360381019061019691906112a1565b610b8b565b6040516101a89190611169565b60405180910390f35b6101b9610dd4565b6040516101c69190611169565b60405180910390f35b6101e960048036038101906101e491906112df565b610ddd565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61023d610e61565b6102465f610ee8565b565b5f600454905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610280610fa9565b8060055f8282546102919190611337565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016102f69392919061136a565b6020604051808303815f875af1158015610312573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033691906113d4565b610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90611459565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103d39392919061136a565b6020604051808303815f875af11580156103ef573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041391906113d4565b610452576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610449906114c1565b60405180910390fd5b8160045f8282546104639190611337565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4583836040516104b29291906114df565b60405180910390a26104c2610fef565b5050565b6104ce610fa9565b8160045f8282546104df9190611506565b925050819055508060055f8282546104f79190611506565b92505081905550600454821115801561051257506005548111155b610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611583565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105ad9291906115a1565b6020604051808303815f875af11580156105c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ed91906113d4565b61062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611459565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106889291906115a1565b6020604051808303815f875af11580156106a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c891906113d4565b610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe906114c1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059838360405161074f9291906114df565b60405180910390a261075f610fef565b5050565b61076b610fa9565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610812575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890611612565b60405180910390fd5b5f8211801561085f57505f81115b61089e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108959061167a565b60405180910390fd5b5f8390505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461091e5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610941565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90505f61094e8686610b8b565b905083811015610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a906116e2565b60405180910390fd5b61099e868683610ff8565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016109db9392919061136a565b6020604051808303815f875af11580156109f7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a1b91906113d4565b610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a519061174a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a959291906115a1565b6020604051808303815f875af1158015610ab1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad591906113d4565b610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b906117b2565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f54424bcd37c121359634358c4b6124e821af711811c1ad2fb8f96b94b046338c8784604051610b739291906114df565b60405180910390a3505050610b86610fef565b505050565b5f808211610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc59061181a565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610c75575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab90611612565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610d1157600554610d15565b6004545b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d7457600454610d78565b6005545b90505f6126f790505f8186610d8d9190611838565b90505f8382610d9c9190611838565b90505f8261271087610dae9190611838565b610db89190611337565b90508082610dc691906118a6565b965050505050505092915050565b5f600554905090565b610de5610e61565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e55575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4c91906111a2565b60405180910390fd5b610e5e81610ee8565b50565b610e696110b7565b73ffffffffffffffffffffffffffffffffffffffff16610e87610251565b73ffffffffffffffffffffffffffffffffffffffff1614610ee657610eaa6110b7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610edd91906111a2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610fe5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611081578160045f82825461105d9190611337565b925050819055508060055f8282546110759190611506565b925050819055506110b2565b8160055f8282546110929190611337565b925050819055508060045f8282546110aa9190611506565b925050819055505b505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6111006110fb6110f6846110be565b6110dd565b6110be565b9050919050565b5f611111826110e6565b9050919050565b5f61112282611107565b9050919050565b61113281611118565b82525050565b5f60208201905061114b5f830184611129565b92915050565b5f819050919050565b61116381611151565b82525050565b5f60208201905061117c5f83018461115a565b92915050565b5f61118c826110be565b9050919050565b61119c81611182565b82525050565b5f6020820190506111b55f830184611193565b92915050565b5f80fd5b6111c881611151565b81146111d2575f80fd5b50565b5f813590506111e3816111bf565b92915050565b5f80604083850312156111ff576111fe6111bb565b5b5f61120c858286016111d5565b925050602061121d858286016111d5565b9150509250929050565b61123081611182565b811461123a575f80fd5b50565b5f8135905061124b81611227565b92915050565b5f805f60608486031215611268576112676111bb565b5b5f6112758682870161123d565b9350506020611286868287016111d5565b9250506040611297868287016111d5565b9150509250925092565b5f80604083850312156112b7576112b66111bb565b5b5f6112c48582860161123d565b92505060206112d5858286016111d5565b9150509250929050565b5f602082840312156112f4576112f36111bb565b5b5f6113018482850161123d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134182611151565b915061134c83611151565b92508282019050808211156113645761136361130a565b5b92915050565b5f60608201905061137d5f830186611193565b61138a6020830185611193565b611397604083018461115a565b949350505050565b5f8115159050919050565b6113b38161139f565b81146113bd575f80fd5b50565b5f815190506113ce816113aa565b92915050565b5f602082840312156113e9576113e86111bb565b5b5f6113f6848285016113c0565b91505092915050565b5f82825260208201905092915050565b7f546f6b656e41207472616e73666572206661696c6564000000000000000000005f82015250565b5f6114436016836113ff565b915061144e8261140f565b602082019050919050565b5f6020820190508181035f83015261147081611437565b9050919050565b7f546f6b656e42207472616e73666572206661696c6564000000000000000000005f82015250565b5f6114ab6016836113ff565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b5f6040820190506114f25f83018561115a565b6114ff602083018461115a565b9392505050565b5f61151082611151565b915061151b83611151565b92508282039050818111156115335761153261130a565b5b92915050565b7f496e73756666696369656e742072657365727665732e000000000000000000005f82015250565b5f61156d6016836113ff565b915061157882611539565b602082019050919050565b5f6020820190508181035f83015261159a81611561565b9050919050565b5f6040820190506115b45f830185611193565b6115c1602083018461115a565b9392505050565b7f496e76616c696420746f6b656e20616464726573732e000000000000000000005f82015250565b5f6115fc6016836113ff565b9150611607826115c8565b602082019050919050565b5f6020820190508181035f830152611629816115f0565b9050919050565b7f496e76616c69642074726164696e6720616d6f756e74732e00000000000000005f82015250565b5f6116646018836113ff565b915061166f82611630565b602082019050919050565b5f6020820190508181035f83015261169181611658565b9050919050565b7f536c6970706167652065786365656465642e00000000000000000000000000005f82015250565b5f6116cc6012836113ff565b91506116d782611698565b602082019050919050565b5f6020820190508181035f8301526116f9816116c0565b9050919050565b7f496e70757420746f6b656e207472616e73666572206661696c656400000000005f82015250565b5f611734601b836113ff565b915061173f82611700565b602082019050919050565b5f6020820190508181035f83015261176181611728565b9050919050565b7f4f757470757420746f6b656e207472616e73666572206661696c6564000000005f82015250565b5f61179c601c836113ff565b91506117a782611768565b602082019050919050565b5f6020820190508181035f8301526117c981611790565b9050919050565b7f416d6f756e7420696e206d75737420626520706f7369746976652e00000000005f82015250565b5f611804601b836113ff565b915061180f826117d0565b602082019050919050565b5f6020820190508181035f830152611831816117f8565b9050919050565b5f61184282611151565b915061184d83611151565b925082820261185b81611151565b915082820484148315176118725761187161130a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118b082611151565b91506118bb83611151565b9250826118cb576118ca611879565b5b82820490509291505056fea26469706673582212209102d37472336a81b64b15401f905b1649e0e70b94bd2c3da1df8d371a2c1c4364736f6c63430008140033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"addLiquidity(uint256,uint256)": {"author": null, "details": "Allows a user to add liquidity to the pool for both tokens.", "params": {"tokenAAmount": "The amount of tokenA to add.", "tokenBAmount": "The amount of tokenB to add."}, "return": null}, "constructor": {"author": null, "details": "Constructor to set up the market with two tokens.", "params": {"_tokenA": "The address of the first token.", "_tokenB": "The address of the second token."}, "return": null}, "getAmountOut(address,uint256)": {"author": null, "details": "Calculates the output amount for a given input amount using a simple formula.", "params": {"amountIn": "The amount of the input token.", "tokenIn": "The address of the input token."}, "return": null}, "getReserveA()": {"author": null, "details": "Public getter for reserveA.", "params": {}, "return": null}, "getReserveB()": {"author": null, "details": "Public getter for reserveB.", "params": {}, "return": null}, "owner()": {"author": null, "details": "Returns the address of the current owner.", "params": {}, "return": null}, "removeLiquidity(uint256,uint256)": {"author": null, "details": "Allows a user to remove liquidity from the pool for both tokens.", "params": {"tokenAAmount": "The amount of tokenA to remove.", "tokenBAmount": "The amount of tokenB to remove."}, "return": null}, "renounceOwnership()": {"author": null, "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.", "params": {}, "return": null}, "trade(address,uint256,uint256)": {"author": null, "details": "Executes a trade from one token to another.", "params": {"amountIn": "The amount of the input token being traded.", "minAmountOut": "The minimum amount of the output token expected (for slippage protection).", "tokenIn": "The address of the token being traded in."}, "return": null}, "transferOwnership(address)": {"author": null, "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.", "params": {}, "return": null}}, "author": null, "details": "Contract for managing liquidity and enabling trades between two ERC20 tokens. It provides functions to add/remove liquidity to a token pair pool and to trade between the two tokens.", "title": "MarketIntegration"}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/interfaces/IMarketIntegration.sol:IMarketIntegration": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {"addLiquidity(uint256,uint256)": {"notice": "Adds liquidity to the pool in exchange for pool tokens."}, "getAmountOut(address,uint256)": {"notice": "Calculates the output amount for a given input amount using the constant product formula."}, "removeLiquidity(uint256,uint256)": {"notice": "Removes liquidity from the pool and returns the underlying tokens."}, "trade(address,uint256,uint256)": {"notice": "Executes a trade between tokenA and tokenB."}}, "notice": null}, "devdoc": {"methods": {"addLiquidity(uint256,uint256)": {"author": null, "details": null, "params": {"tokenAAmount": "Amount of tokenA to add to the pool.", "tokenBAmount": "Amount of tokenB to add to the pool. Emits a {LiquidityAdded} event."}, "return": null}, "getAmountOut(address,uint256)": {"author": null, "details": null, "params": {"amountIn": "Amount of the input token.", "tokenIn": "Address of the input token."}, "return": null}, "removeLiquidity(uint256,uint256)": {"author": null, "details": null, "params": {"tokenAAmount": "Amount of tokenA to remove from the pool.", "tokenBAmount": "Amount of tokenB to remove from the pool. Emits a {LiquidityRemoved} event."}, "return": null}, "trade(address,uint256,uint256)": {"author": null, "details": null, "params": {"amountIn": "Amount of the input token being traded.", "minAmountOut": "Minimum amount of the output token that must be received for the trade to proceed. Emits a {TradeExecuted} event.", "tokenIn": "Address of the token being traded in."}, "return": null}}, "author": null, "details": "Interface for interacting with a LiquidityPool contract, allowing for adding/removing liquidity and trading.", "title": "IMarketIntegration"}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"constructor": {"author": null, "details": "Initializes the contract setting the address provided by the deployer as the initial owner.", "params": {}, "return": null}, "owner()": {"author": null, "details": "Returns the address of the current owner.", "params": {}, "return": null}, "renounceOwnership()": {"author": null, "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.", "params": {}, "return": null}, "transferOwnership(address)": {"author": null, "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.", "params": {}, "return": null}}, "author": null, "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.", "title": null}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "Returns the value of tokens owned by `account`.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "Returns the value of tokens in existence.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}}, "author": null, "details": "Interface of the ERC20 standard as defined in the EIP.", "title": null}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/Context.sol:Context": {"srcmap": "", "srcmap-runtime": "", "abi": "[]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.", "title": null}, "libraries": {}}, "/home/wejdene/thesis/NFT-F/node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].", "title": null}, "libraries": {}}}}